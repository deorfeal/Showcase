document.querySelectorAll('.faq-list__item').forEach(item => {
    item.addEventListener('click', () => {
        // Если элемент уже активен, убрать активный класс
        if (item.classList.contains('faq-list__item--active')) {
            item.classList.remove('faq-list__item--active');
        } else {
            // Убираем класс у всех элементов
            document.querySelectorAll('.faq-list__item').forEach(el => el.classList.remove('faq-list__item--active'));
            // Добавляем класс текущему элементу
            item.classList.add('faq-list__item--active');
        }
    });
});

document.querySelectorAll('.tel-list__item').forEach(item => {
    item.addEventListener('click', function () {
        // Убираем активный класс у всех элементов списка
        document.querySelectorAll('.tel-list__item').forEach(el => {
            el.classList.remove('tel-list__item--active');
        });

        // Добавляем активный класс к кликнутому элементу
        this.classList.add('tel-list__item--active');

        // Получаем id кликнутого элемента
        const clickedId = this.id;

        // Убираем активный класс у всех элементов с классом tel-item
        document.querySelectorAll('.tel-item').forEach(el => {
            el.classList.remove('tel-item--active');
        });

        // Добавляем активный класс только тому элементу tel-item, чей id совпадает с id кликнутого элемента
        document.querySelectorAll('.tel-item').forEach(el => {
            if (el.id === clickedId) {
                el.classList.add('tel-item--active');
            }
        });

        // Убираем активный класс у всех элементов с классом tl
        document.querySelectorAll('.tl').forEach(el => {
            el.classList.remove('tl--active');
        });

        // Добавляем активный класс только тому элементу tl, чей id совпадает с id кликнутого элемента
        document.querySelectorAll('.tl').forEach(el => {
            if (el.id === clickedId) {
                el.classList.add('tl--active');
            }
        });
    });
});

document.querySelectorAll('.contacts-wrap__item-input').forEach(input => {
    input.addEventListener('click', function () {
        // Найдем родительский элемент contacts
        const parentContacts = this.closest('.contacts');

        // Убираем checked="true" у всех contacts-wrap__item-input в родительском contacts
        parentContacts.querySelectorAll('.contacts-wrap__item-input').forEach(contactInput => {
            contactInput.checked = false;
        });

        // Ставим checked="true" для нажатого contacts-wrap__item-input
        this.checked = true;

        // Убираем класс contacts-wrap__item--active у всех элементов с классом contacts-wrap__item
        parentContacts.querySelectorAll('.contacts-wrap__item').forEach(contactWrapItem => {
            contactWrapItem.classList.remove('contacts-wrap__item--active');
        });

        // Добавляем класс contacts-wrap__item--active родителю инпута, на который кликнули
        this.closest('.contacts-wrap__item').classList.add('contacts-wrap__item--active');

        // Убираем класс contacts__itm--active у всех элементов contacts__itm
        parentContacts.querySelectorAll('.contacts__itm').forEach(contactItem => {
            contactItem.classList.remove('contacts__itm--acitve');
        });

        // Получаем id нажатого инпута
        const inputId = this.id;

        // Добавляем класс contacts__itm--active элементу с совпадающим id
        parentContacts.querySelectorAll('.contacts__itm').forEach(contactItem => {
            if (contactItem.id === inputId) {
                contactItem.classList.add('contacts__itm--acitve');
            }
        });
    });
});


document.querySelectorAll('.radio__input').forEach(input => {
    input.addEventListener('click', function () {

        // Найдем родительский элемент form
        const parentForm = this.closest('form');

        // Убираем checked="true" у всех radio__input в родительском form
        parentForm.querySelectorAll('.radio__input').forEach(radio => {
            radio.checked = false;
        });

        // Ставим checked="true" для нажатого radio__input
        this.checked = true;

        // Убираем класс form__wrapper--active у всех элементов form__wrapper
        parentForm.querySelectorAll('.form__wrapper').forEach(wrapper => {
            wrapper.classList.remove('form__wrapper--active');
        });

        // Получаем id нажатого инпута
        const inputId = this.id;

        // Добавляем класс form__wrapper--active элементу с совпадающим id
        parentForm.querySelectorAll('.form__wrapper').forEach(wrapper => {
            if (wrapper.id === inputId) {
                wrapper.classList.add('form__wrapper--active');
            }
        });
    });
});

$(function () {

    // Функция для проверки на мобильные устройства
    function isMobileDevice() {
        return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);
    }

    // Если устройство мобильное, то используем событие клика
    if (isMobileDevice()) {
        $(document).on('click', function (event) {
            // Проверяем, является ли цель клика элементом с классом '.lang'
            if (!$(event.target).closest('.lang').length) {
                // Если нет, убираем класс 'lang--active' у всех элементов с этим классом
                $('.lang').removeClass('lang--active');
            } else {
                // Иначе добавляем/убираем класс 'lang--active' для элемента с классом '.lang'
                $(event.target).closest('.lang').toggleClass('lang--active');
            }
        });
    } else { // Иначе используем событие ховера
        $('.lang').on('mouseover', function () {
            $(this).addClass('lang--active');
        });

        $('.lang').on('mouseout', function () {
            $(this).removeClass('lang--active');
        });
    }

    // Если устройство мобильное, то используем событие клика
    if (isMobileDevice()) {
        $(document).on('click', function (event) {
            // Проверяем, является ли цель клика элементом с классом '.lang'
            if (!$(event.target).closest('.menu-list__item--sublist').length) {
                // Если нет, убираем класс 'lang--active' у всех элементов с этим классом
                $('.menu-list__item--sublist').removeClass('menu-list__item--actived');
            } else {
                // Иначе добавляем/убираем класс 'lang--active' для элемента с классом '.lang'
                $(event.target).closest('.menu-list__item--sublist').toggleClass('menu-list__item--actived');
            }
        });
    } else { // Иначе используем событие ховера
        $('.menu-list__item--sublist').on('mouseover', function () {
            $(this).addClass('menu-list__item--actived');
        });

        $('.menu-list__item--sublist').on('mouseout', function () {
            $(this).removeClass('menu-list__item--actived');
        });
    }
});

$(function () {

    $('.tel-select').on('click', function (event) {
        $(this).toggleClass('tel-select--active');
    });

    $('.thumbs-slide__inner').on('click', function (event) {
        $('.story').toggleClass('story--active');
    });

    $('.story-swiper__pagination').on('click', function (event) {
        $('.story').toggleClass('story--active');
    });

    $('.cnt-point').on('click', function (event) {
        $('.cnt-item').removeClass('cnt-item--active');
        $(this).closest('.cnt-item').addClass('cnt-item--active')
    });
    $('.vacation-item__more').on('click', function (event) {
        $(this).closest('.vacation-item').toggleClass('vacation-item--active');
    });

    $('.burger').on('click', function (event) {
        $('body').toggleClass('body--active');
    });

    $('.menu__link').on('click', function (event) {
        $('body').toggleClass('body--active');
    });


    // Делаем попап и скрываем по клику вне его
    $(document).ready(function () {
        var $popup = $('.popup');
        var $popups = {
            first: $('.popup--first'),
            second: $('.popup--second'),
            third: $('.popup--third'),
            fourth: $('.popup--fourth'),
            fifth: $('.popup--fifth'),
            sixth: $('.popup--sixth'),
            seventh: $('.popup--seventh'),
            eight: $('.popup--eight'),
            ninth: $('.popup--ninth'),
            tenth: $('.popup--tenth'),
        };

        // Функция для показа попапа
        function showPopup($popupToShow) {
            $popupToShow.addClass('popup--active').fadeIn(250, function () {
                $(this).animate({ opacity: 1 }, 250);
            });
            $('body').addClass('body--popup');
        }

        // Функция для скрытия попапа
        function hidePopup($popupToHide) {
            $popupToHide.removeClass('popup--active').fadeOut(250, function () {
                $(this).animate({ opacity: 1 }, 250);
            });
            $('body').removeClass('body--popup');
        }

        // Обработчики кликов для показа попапов
        $('.open-first-popup').click(function (event) {
            event.stopPropagation();
            event.preventDefault();
            showPopup($popups.first);
        });

        // Обработчики кликов для показа попапов
        $('.open-second-popup').click(function (event) {
            event.stopPropagation();
            event.preventDefault();
            showPopup($popups.second);
        });

        // Обработчики кликов для показа попапов
        $('.open-third-popup').click(function (event) {
            event.stopPropagation();
            event.preventDefault();
            showPopup($popups.third);
        });

        // Обработчики кликов для показа попапов
        $('.open-fourth-popup').click(function (event) {
            event.stopPropagation();
            event.preventDefault();
            showPopup($popups.fourth);
        });

        // Обработчики кликов для показа попапов
        $('.open-fifth-popup').click(function (event) {
            event.stopPropagation();
            event.preventDefault();
            showPopup($popups.fifth);
        });
        // Обработчики кликов для показа попапов
        $('.open-sixth-popup').click(function (event) {
            event.stopPropagation();
            event.preventDefault();
            showPopup($popups.sixth);
        });
        // Обработчики кликов для показа попапов
        $('.open-seventh-popup').click(function (event) {
            event.stopPropagation();
            event.preventDefault();
            showPopup($popups.seventh);
        });
        // Обработчики кликов для показа попапов
        $('.open-eight-popup').click(function (event) {
            event.stopPropagation();
            event.preventDefault();
            showPopup($popups.eight);
        });
        // Обработчики кликов для показа попапов
        $('.open-ninth-popup').click(function (event) {
            event.stopPropagation();
            event.preventDefault();
            showPopup($popups.ninth);
        });
        // Обработчики кликов для показа попапов
        $('.open-tenth-popup').click(function (event) {
            event.stopPropagation();
            event.preventDefault();
            showPopup($popups.tenth);
        });

        // Обработчик кликов для скрытия попапов
        $('.cls').click(function (event) {
            event.stopPropagation();
            event.preventDefault();
            hidePopup($(this).closest($popup));
        });

        // Скрываем попап при клике вне его области
        $(document).click(function (event) {
            $.each($popups, function (key, $popupToCheck) {
                if ($popupToCheck.hasClass('popup--active')) {
                    var $popupInner = $popupToCheck.find('.popup__inner');
                    if (!$popupInner.is(event.target) && $popupInner.has(event.target).length === 0) {
                        hidePopup($popupToCheck);
                    }
                }
            });
        });
    });
    // 

})

var storyThumbs = new Swiper(".story-thumbs", {
    loop: false,
    slidesPerView: 11,
    spaceBetween: 0,
    speed: 750,
    navigation: {
        prevEl: '.story-thumbs__arrow--prev',
        nextEl: '.story-thumbs__arrow--next',
    },
    breakpoints: {
        301: {
            loop: false,
            slidesPerView: 1,
            spaceBetween: 0,
            speed: 750,
        },
        551: {
            loop: false,
            slidesPerView: 5,
            spaceBetween: 0,
            speed: 750,
        },
        651: {
            loop: false,
            slidesPerView: 7,
            spaceBetween: 0,
            speed: 750,
        },
        992: {
            loop: false,
            slidesPerView: 11,
            spaceBetween: 0,
            speed: 750,
        },
    },
    watchSlidesVisibility: true, // Включаем отслеживание видимости слайдов
    watchSlidesProgress: true,   // Включаем отслеживание прогресса слайдов
});

// Массив значений для пагинации
const paginationValues = [2009, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023];

var storySwiper = new Swiper(".story-swiper", {
    loop: false,
    slidesPerView: 1,
    spaceBetween: 30,
    speed: 750,
    navigation: {
        prevEl: '.story-swiper__arrow--prev',
        nextEl: '.story-swiper__arrow--next',
    },
    thumbs: {
        swiper: storyThumbs,
    },
    // Отключаем стандартную пагинацию Swiper
    pagination: false,
    on: {
        // Событие при смене слайда
        slideChange: function () {
            updateActivePagination(storySwiper.activeIndex);
        }
    },
    watchSlidesVisibility: true, // Включаем отслеживание видимости слайдов
    watchSlidesProgress: true,   // Включаем отслеживание прогресса слайдов
});

// Автопрокрутка `thumbs` при изменении активного слайда в основном слайдере
storySwiper.on('slideChange', function () {
    let activeIndex = storySwiper.activeIndex;
    storyThumbs.slideTo(activeIndex); // Автоматическая прокрутка миниатюр
});

// Автопрокрутка `thumbs` при изменении активного слайда в основном слайдере
storyThumbs.on('slideChange', function () {
    let activeIndex = storyThumbs.activeIndex;
    storySwiper.slideTo(activeIndex); // Автоматическая прокрутка миниатюр
});

if (document.querySelector('.story-swiper__pagination')) {
    // Функция для создания кастомной пагинации
    function createCustomPagination(values) {
        const paginationContainer = document.querySelector('.story-swiper__pagination');
        paginationContainer.innerHTML = ''; // Очищаем контейнер перед добавлением новых элементов

        values.forEach((value, index) => {
            const paginationItem = document.createElement('div');
            paginationItem.classList.add('pagination__item');
            paginationItem.textContent = `${value} г.`; // Пример отображения с "г."

            // Добавляем обработчик клика для переключения слайдов
            paginationItem.addEventListener('click', () => {
                storySwiper.slideTo(index); // Переключаем слайд при клике
            });

            paginationContainer.appendChild(paginationItem);
        });

        // Устанавливаем активный элемент для начального слайда
        updateActivePagination(storySwiper.activeIndex);
    }

    // Функция для обновления активного элемента пагинации
    function updateActivePagination(activeIndex) {
        document.querySelectorAll('.pagination__item').forEach((item, index) => {
            item.classList.toggle('active', index === activeIndex); // Добавляем/удаляем класс "active" для текущего слайда
        });
    }

    // Инициализация кастомной пагинации
    createCustomPagination(paginationValues);
}


new Swiper(".recalls-swiper", {
    loop: true,
    slidesPerView: 3,
    spaceBetween: 20,
    speed: 750,
    navigation: {
        prevEl: '.recalls-swiper__arrow--prev',
        nextEl: '.recalls-swiper__arrow--next',
    },
    pagination: {
        el: '.recalls-swiper__pagination',
        type: 'bullets',
        clickable: true,
    },
    breakpoints: {
        301: {
            loop: true,
            slidesPerView: 1,
            spaceBetween: 20,
            speed: 750,
        },
        651: {
            loop: true,
            slidesPerView: 2,
            spaceBetween: 20,
            speed: 750,
        },
        1101: {
            loop: true,
            slidesPerView: 3,
            spaceBetween: 20,
            speed: 750,
        },
    }
});

new Swiper(".testimonials-swiper", {
    loop: true,
    slidesPerView: 3,
    spaceBetween: 20,
    speed: 750,
    breakpoints: {
        301: {
            loop: true,
            slidesPerView: 1,
            spaceBetween: 20,
            speed: 750,
        },
        551: {
            loop: true,
            slidesPerView: 1.5,
            spaceBetween: 20,
            speed: 750,
        },
        992: {
            loop: true,
            slidesPerView: 3,
            spaceBetween: 20,
            speed: 750,
        },
    }
});

new Swiper(".gallery-swiper", {
    loop: true,
    slidesPerView: 3,
    spaceBetween: 20,
    speed: 750,
    breakpoints: {
        301: {
            loop: true,
            slidesPerView: 1,
            spaceBetween: 20,
            speed: 750,
        },
        501: {
            loop: true,
            slidesPerView: 2,
            spaceBetween: 20,
            speed: 750,
        },
        651: {
            loop: true,
            slidesPerView: 3,
            spaceBetween: 20,
            speed: 750,
        },
    }
});

new Swiper(".certificates-swiper", {
    loop: true,
    slidesPerView: 6,
    spaceBetween: 20,
    speed: 750,
    breakpoints: {
        301: {
            loop: true,
            slidesPerView: 1.5,
            spaceBetween: 20,
            speed: 750,
        },
        551: {
            loop: true,
            slidesPerView: 2.25,
            spaceBetween: 20,
            speed: 750,
        },
        701: {
            loop: true,
            slidesPerView: 3.25,
            spaceBetween: 20,
            speed: 750,
        },
        992: {
            loop: true,
            slidesPerView: 3.5,
            spaceBetween: 20,
            speed: 750,
        },
        1101: {
            loop: true,
            slidesPerView: 4.5,
            spaceBetween: 20,
            speed: 750,
        },
        1351: {
            loop: true,
            slidesPerView: 6,
            spaceBetween: 20,
            speed: 750,
        },
    }
});

new Swiper(".partners-swiper--first", {
    loop: true,
    slidesPerView: 5,
    centeredSlides: true,
    spaceBetween: 20,
    speed: 750,
    autoplay: {
        delay: 2500, // задержка между слайдами в миллисекундах
        disableOnInteraction: false, // если true, автопрокрутка остановится при взаимодействии пользователя с swiper
    },
    breakpoints: {
        301: {
            loop: true,
            slidesPerView: 2,
            centeredSlides: true,
            spaceBetween: 20,
            speed: 750,
        },
        551: {
            loop: true,
            slidesPerView: 2.3,
            centeredSlides: true,
            spaceBetween: 20,
            speed: 750,
        },
        851: {
            loop: true,
            slidesPerView: 3,
            centeredSlides: true,
            spaceBetween: 20,
            speed: 750,
        },
        992: {
            loop: true,
            slidesPerView: 4,
            centeredSlides: true,
            spaceBetween: 20,
            speed: 750,
        },
        1251: {
            loop: true,
            slidesPerView: 5,
            centeredSlides: true,
            spaceBetween: 20,
            speed: 750,
        },
    }
});

new Swiper(".partners-swiper--second", {
    loop: true,
    slidesPerView: 5,
    centeredSlides: true,
    spaceBetween: 20,
    speed: 750,
    autoplay: {
        delay: 2500, // задержка между слайдами в миллисекундах
        disableOnInteraction: false, // если true, автопрокрутка остановится при взаимодействии пользователя с swiper
        reverseDirection: true, // Прокрутка в обратную сторону
    },
    breakpoints: {
        301: {
            loop: true,
            slidesPerView: 2,
            centeredSlides: true,
            spaceBetween: 20,
            speed: 750,
        },
        551: {
            loop: true,
            slidesPerView: 2.3,
            centeredSlides: true,
            spaceBetween: 20,
            speed: 750,
        },
        851: {
            loop: true,
            slidesPerView: 3,
            centeredSlides: true,
            spaceBetween: 20,
            speed: 750,
        },
        992: {
            loop: true,
            slidesPerView: 4,
            centeredSlides: true,
            spaceBetween: 20,
            speed: 750,
        },
        1251: {
            loop: true,
            slidesPerView: 5,
            centeredSlides: true,
            spaceBetween: 20,
            speed: 750,
        },
    }
});

new Swiper(".success-swiper", {
    loop: true,
    slidesPerView: 2,
    spaceBetween: 24,
    speed: 750,
    navigation: {
        prevEl: '.success-swiper__arrow--prev',
        nextEl: '.success-swiper__arrow--next',
    },
    pagination: {
        el: '.success-swiper__pagination',
        type: 'bullets',
        clickable: true,
    },
    breakpoints: {
        301: {
            loop: true,
            slidesPerView: 1,
            spaceBetween: 24,
            speed: 750,
        },

        992: {
            loop: true,
            slidesPerView: 2,
            spaceBetween: 24,
            speed: 750,
        },
    }
});

new Swiper(".achievements-swiper", {
    loop: true,
    slidesPerView: 4.25,
    spaceBetween: 20,
    speed: 750,
    navigation: {
        prevEl: '.achievements-swiper__arrow--prev',
        nextEl: '.achievements-swiper__arrow--next',
    },
    breakpoints: {
        301: {
            loop: true,
            slidesPerView: 1.5,
            spaceBetween: 16,
            speed: 750,
        },
        451: {
            loop: true,
            slidesPerView: 2.25,
            spaceBetween: 16,
            speed: 750,
        },
        701: {
            loop: true,
            slidesPerView: 3.25,
            spaceBetween: 20,
            speed: 750,
        },
        992: {
            loop: true,
            slidesPerView: 4.25,
            spaceBetween: 20,
            speed: 750,
        },
    }
});

new Swiper(".product-swiper", {
    loop: true,
    slidesPerView: 1,
    spaceBetween: 20,
    speed: 750,
    navigation: {
        prevEl: '.product-swiper__arrow--prev',
        nextEl: '.product-swiper__arrow--next',
    },
    pagination: {
        el: '.product-swiper__pagination',
        type: 'custom',
        renderCustom: function (swiper, current) {
            const formatNumber = (num) => num < 10 ? `0${num}` : num;
            return `${formatNumber(current)}`;
        },
    },
    // breakpoints: {
    //     301: {
    //         loop: false,
    //         slidesPerView: 4,
    //         spaceBetween: 16,
    //         direction: 'vertical',
    //     },
    //     992: {
    //         loop: false,
    //         slidesPerView: 4,
    //         spaceBetween: 25,
    //         direction: 'vertical',
    //     },
    // }
});

new Swiper(".benefits-swiper", {
    loop: true,
    slidesPerView: 1.5,
    spaceBetween: 10,
    speed: 750,
    // breakpoints: {
    //     301: {
    //         loop: false,
    //         slidesPerView: 4,
    //         spaceBetween: 16,
    //         direction: 'vertical',
    //     },
    //     992: {
    //         loop: false,
    //         slidesPerView: 4,
    //         spaceBetween: 25,
    //         direction: 'vertical',
    //     },
    // }
});

var x, i, j, l, ll, selElmnt, a, b, c;
/* Look for any elements with the class "custom-select": */
x = document.getElementsByClassName("custom-select");
l = x.length;
for (i = 0; i < l; i++) {
    selElmnt = x[i].getElementsByTagName("select")[0];
    ll = selElmnt.length;
    /* For each element, create a new DIV that will act as the selected item: */
    a = document.createElement("DIV");
    a.setAttribute("class", "select-selected");
    a.innerHTML = selElmnt.options[selElmnt.selectedIndex].innerHTML;
    x[i].appendChild(a);
    /* For each element, create a new DIV that will contain the option list: */
    b = document.createElement("DIV");
    b.setAttribute("class", "select-items select-hide");
    for (j = 1; j < ll; j++) {
        /* For each option in the original select element,
        create a new DIV that will act as an option item: */
        c = document.createElement("DIV");
        c.innerHTML = selElmnt.options[j].innerHTML;
        c.addEventListener("click", function (e) {
            /* When an item is clicked, update the original select box,
            and the selected item: */
            var y, i, k, s, h, sl, yl;
            s = this.parentNode.parentNode.getElementsByTagName("select")[0];
            sl = s.length;
            h = this.parentNode.previousSibling;
            for (i = 0; i < sl; i++) {
                if (s.options[i].innerHTML == this.innerHTML) {
                    s.selectedIndex = i;
                    h.innerHTML = this.innerHTML;
                    y = this.parentNode.getElementsByClassName("same-as-selected");
                    yl = y.length;
                    for (k = 0; k < yl; k++) {
                        y[k].removeAttribute("class");
                    }
                    this.setAttribute("class", "same-as-selected");
                    break;
                }
            }
            h.click();
        });
        b.appendChild(c);
    }
    x[i].appendChild(b);
    a.addEventListener("click", function (e) {
        /* When the select box is clicked, close any other select boxes,
        and open/close the current select box: */
        e.stopPropagation();
        closeAllSelect(this);
        this.nextSibling.classList.toggle("select-hide");
        this.classList.toggle("select-arrow-active");
    });
}

function closeAllSelect(elmnt) {
    /* A function that will close all select boxes in the document,
    except the current select box: */
    var x, y, i, xl, yl, arrNo = [];
    x = document.getElementsByClassName("select-items");
    y = document.getElementsByClassName("select-selected");
    xl = x.length;
    yl = y.length;
    for (i = 0; i < yl; i++) {
        if (elmnt == y[i]) {
            arrNo.push(i)
        } else {
            y[i].classList.remove("select-arrow-active");
        }
    }
    for (i = 0; i < xl; i++) {
        if (arrNo.indexOf(i)) {
            x[i].classList.add("select-hide");
        }
    }
}

/* If the user clicks anywhere outside the select box,
then close all select boxes: */
document.addEventListener("click", closeAllSelect);

window.addEventListener("DOMContentLoaded", function () {
    [].forEach.call(document.querySelectorAll('.tl--kz'), function (input) {
        var keyCode;

        function mask(event) {
            event.keyCode && (keyCode = event.keyCode);
            var pos = this.selectionStart;
            if (pos < 3) event.preventDefault();
            var matrix = "+7 (___) ___-__-__",
                i = 0,
                def = matrix.replace(/\D/g, ""),
                val = this.value.replace(/\D/g, ""),
                new_value = matrix.replace(/[_\d]/g, function (a) {
                    return i < val.length ? val.charAt(i++) || def.charAt(i) : a
                });
            i = new_value.indexOf("_");
            if (i != -1) {
                i < 5 && (i = 3);
                new_value = new_value.slice(0, i)
            }
            var reg = matrix.substr(0, this.value.length).replace(/_+/g,
                function (a) {
                    return "\\d{1," + a.length + "}"
                }).replace(/[+()]/g, "\\$&");
            reg = new RegExp("^" + reg + "$");
            if (!reg.test(this.value) || this.value.length < 5 || keyCode > 47 && keyCode < 58) this.value = new_value;
            if (event.type == "blur" && this.value.length < 5) this.value = ""
        }

        input.addEventListener("input", mask, false);
        input.addEventListener("focus", mask, false);
        input.addEventListener("blur", mask, false);
        input.addEventListener("keydown", mask, false)

    });
    [].forEach.call(document.querySelectorAll('.tl--ru'), function (input) {
        var keyCode;

        function mask(event) {
            event.keyCode && (keyCode = event.keyCode);
            var pos = this.selectionStart;
            if (pos < 3) event.preventDefault();
            var matrix = "+7 (___) ___-__-__",
                i = 0,
                def = matrix.replace(/\D/g, ""),
                val = this.value.replace(/\D/g, ""),
                new_value = matrix.replace(/[_\d]/g, function (a) {
                    return i < val.length ? val.charAt(i++) || def.charAt(i) : a
                });
            i = new_value.indexOf("_");
            if (i != -1) {
                i < 5 && (i = 3);
                new_value = new_value.slice(0, i)
            }
            var reg = matrix.substr(0, this.value.length).replace(/_+/g,
                function (a) {
                    return "\\d{1," + a.length + "}"
                }).replace(/[+()]/g, "\\$&");
            reg = new RegExp("^" + reg + "$");
            if (!reg.test(this.value) || this.value.length < 5 || keyCode > 47 && keyCode < 58) this.value = new_value;
            if (event.type == "blur" && this.value.length < 5) this.value = ""
        }

        input.addEventListener("input", mask, false);
        input.addEventListener("focus", mask, false);
        input.addEventListener("blur", mask, false);
        input.addEventListener("keydown", mask, false)

    });
});
