$(function () {

    $('.burger').on('click', function (event) {
      $('body').toggleClass('body--active')
    });
  
    $('.checkbox__input').on('click', function (event) {
      if ($(this).closest('.payment')) {
        $(this).closest('.payments__inner').find('.payments-item').removeClass('checkbox--actived');
        $(this).closest('.payments__inner').find('.checkbox__input').prop('checked', false);
        $(this).closest('.payments-item').addClass('checkbox--actived');
      }
  
      if ($(this).closest('.checkboxes')) {
        $(this).closest('.checkboxes').find('.checkboxes-item').removeClass('checkbox--actived');
        $(this).closest('.checkboxes').find('.checkbox__input').prop('checked', false);
        $(this).closest('.checkboxes-item').addClass('checkbox--actived');
      }
  
      $(this).prop('checked', true);
    });
  
    $('.offerings-list__item').on('click', function (event) {
      if ($(this).hasClass('offerings-list__item--active')) {
        $(this).closest('.offerings-list').find('.offerings-list__item').removeClass('offerings-list__item--active');
      } else {
        $(this).closest('.offerings-list').find('.offerings-list__item').removeClass('offerings-list__item--active');
        $(this).addClass('offerings-list__item--active')
      }
    });
  
    $('.offers-list__item').on('click', function (event) {
      if ($(this).hasClass('offers-list__item--active')) {
        $(this).removeClass('offers-list__item--active');
      } else {
        $(this).closest('.offers-list').find('.offers-list__item').removeClass('offers-list__item--active');
        $(this).addClass('offers-list__item--active')
      }
    });
  
    $('.story-list__item').on('click', function (event) {
      if ($(this).hasClass('story-list__item--active')) {
        $(this).closest('.story-list').find('.story-list__item').removeClass('story-list__item--active');
      } else {
        $(this).closest('.story-list').find('.story-list__item').removeClass('story-list__item--active');
        $(this).addClass('story-list__item--active')
      }
    });
  
  
    if (document.querySelector('.history-windows')) {
      var containerEl = document.querySelector('.history-windows');
  
      var mixer = mixitup(containerEl, {
        selectors: {
          target: '.mix'
        },
        animation: {
          duration: 750
        }
      });
    }
  
    if (document.querySelector('.page--services-subscriptions')) {
      var containerEl2 = document.querySelector('.page--services-subscriptions');
  
      var mixer = mixitup(containerEl2, {
        selectors: {
          target: '.mix'
        },
        animation: {
          duration: 750
        }
      });
    }
  
    // Делаем попап и скрываем по клику вне его
    $(document).ready(function () {
      var $popupReview = $('.popup--review');
      var $popupReviewInner = $popupReview.find('.popup__inner');
      // Показываем или скрываем popup при клике на кнопке
      $('.write-recall').click(function (event) {
        event.stopPropagation(); // Остановка всплытия события
        $popupReview.addClass('transfer--active');
        $popupReview.fadeIn(250, function () {
          // После показа попапа, делаем анимацию изменения opacity от 0 до 1
          $(this).animate({
            opacity: 1
          }, 250);
        });
        $('body').addClass('body--popup');
      });
  
      $('.close').click(function (event) {
        $('.popup').fadeOut(250);
        $('body').removeClass('body--popup');
      });
  
      // Скрываем popup при клике вне его области (если попап активен)
      $(document).click(function (event) {
        if ($popupReview.hasClass('transfer--active')) {
          if (!($popupReviewInner.is(event.target) || $popupReviewInner.has(event.target).length > 0)) {
            $popupReview.fadeOut(250);
            $('body').removeClass('body--popup');
          }
        }
      });
    });
    //
  
    if (document.querySelectorAll('.star-rating')) {
      const stars = document.querySelectorAll('.star-rating input[type="radio"]');
  
      function handleStarHover(event) {
        const hoveredStarIndex = Array.from(stars).indexOf(event.target);
  
        stars.forEach((star, index) => {
          if (index <= hoveredStarIndex) {
            star.checked = true;
          } else {
            star.checked = false;
          }
        });
      }
  
      stars.forEach((star) => {
        star.addEventListener('mouseover', handleStarHover);
      });
    }
  })
  
  // // Делаем высоту слайдов одинаковой
  
  function setMaxHeightForServices() {
    setTimeout(() => {
      let heights = [];
  
      // Получаем высоту каждого элемента и добавляем в массив
      document.querySelectorAll('.services-slide').forEach(function (slide) {
        heights.push(slide.getBoundingClientRect().height);
      });
  
      let maxHeight = Math.max(...heights);
  
      // Устанавливаем высоту каждого элемента в самую большую высоту
      document.querySelectorAll('.services-slide').forEach(function (slide) {
        slide.style.minHeight = maxHeight + 'px';
      });
    }, 200)
  }
  
  $(function () {
    // Получаем нужный элемент
    if (document.querySelector('.services-swiper')) {
      var element = document.querySelector('.services-swiper');
  
      var newsVisible = function (target) {
        // let headerBottom = document.querySelectorAll('.header-bottom')[0]
        // var menuBtn = document.querySelectorAll('.menu-btn')[0]
        // var footerTop = document.querySelectorAll('.footer-top')[0]
        // Все позиции элемента
        var targetPosition = {
          top: window.pageYOffset + target.getBoundingClientRect().top,
          left: window.pageXOffset + target.getBoundingClientRect().left,
          right: window.pageXOffset + target.getBoundingClientRect().right,
          bottom: window.pageYOffset + target.getBoundingClientRect().bottom
        },
          // Получаем позиции окна
          windowPosition = {
            top: window.pageYOffset,
            left: window.pageXOffset,
            right: window.pageXOffset + document.documentElement.clientWidth,
            bottom: window.pageYOffset + document.documentElement.clientHeight
          };
  
        if (targetPosition.bottom > windowPosition.top && // Если позиция нижней части элемента больше позиции верхней чайти окна, то элемент виден сверху
          targetPosition.top < windowPosition.bottom && // Если позиция верхней части элемента меньше позиции нижней чайти окна, то элемент виден снизу
          targetPosition.right > windowPosition.left && // Если позиция правой стороны элемента больше позиции левой части окна, то элемент виден слева
          targetPosition.left < windowPosition.right) { // Если позиция левой стороны элемента меньше позиции правой чайти окна, то элемент виден справа
          // Если элемент полностью видно, то запускаем следующий код
          setMaxHeightForServices()
        } else { };
      };
  
      // Запускаем функцию при прокрутке страницы
      window.addEventListener('scroll', function () {
        newsVisible(element);
      });
  
      // А также запустим функцию сразу. А то вдруг, элемент изначально видно
      newsVisible(element);
    }
  })
  
  // 
  
  function setMaxHeightForBanners() {
    setTimeout(() => {
      let heights = [];
  
      // Получаем высоту каждого элемента и добавляем в массив
      document.querySelectorAll('.banners-slide__item').forEach(function (slide) {
        heights.push(slide.getBoundingClientRect().height);
      });
  
      let maxHeight = Math.max(...heights);
  
      // Устанавливаем высоту каждого элемента в самую большую высоту
      document.querySelectorAll('.banners-slide__item').forEach(function (slide) {
        slide.style.minHeight = maxHeight + 'px';
      });
    }, 200)
  }
  
  $(function () {
    // Получаем нужный элемент
    if (document.querySelector('.banners-swiper')) {
      var element = document.querySelector('.banners-swiper');
  
      var newsVisible = function (target) {
        // let headerBottom = document.querySelectorAll('.header-bottom')[0]
        // var menuBtn = document.querySelectorAll('.menu-btn')[0]
        // var footerTop = document.querySelectorAll('.footer-top')[0]
        // Все позиции элемента
        var targetPosition = {
          top: window.pageYOffset + target.getBoundingClientRect().top,
          left: window.pageXOffset + target.getBoundingClientRect().left,
          right: window.pageXOffset + target.getBoundingClientRect().right,
          bottom: window.pageYOffset + target.getBoundingClientRect().bottom
        },
          // Получаем позиции окна
          windowPosition = {
            top: window.pageYOffset,
            left: window.pageXOffset,
            right: window.pageXOffset + document.documentElement.clientWidth,
            bottom: window.pageYOffset + document.documentElement.clientHeight
          };
  
        if (targetPosition.bottom > windowPosition.top && // Если позиция нижней части элемента больше позиции верхней чайти окна, то элемент виден сверху
          targetPosition.top < windowPosition.bottom && // Если позиция верхней части элемента меньше позиции нижней чайти окна, то элемент виден снизу
          targetPosition.right > windowPosition.left && // Если позиция правой стороны элемента больше позиции левой части окна, то элемент виден слева
          targetPosition.left < windowPosition.right) { // Если позиция левой стороны элемента меньше позиции правой чайти окна, то элемент виден справа
          // Если элемент полностью видно, то запускаем следующий код
          setMaxHeightForBanners()
        } else { };
      };
  
      // Запускаем функцию при прокрутке страницы
      window.addEventListener('scroll', function () {
        newsVisible(element);
      });
  
      // А также запустим функцию сразу. А то вдруг, элемент изначально видно
      newsVisible(element);
    }
  })
  
  // 
  
  function setMaxHeightForSubscriptions() {
    setTimeout(() => {
      let heights = [];
  
      // Получаем высоту каждого элемента и добавляем в массив
      document.querySelectorAll('.subscriptions-slide__item').forEach(function (slide) {
        heights.push(slide.getBoundingClientRect().height);
      });
  
      let maxHeight = Math.max(...heights);
  
      // Устанавливаем высоту каждого элемента в самую большую высоту
      document.querySelectorAll('.subscriptions-slide__item').forEach(function (slide) {
        slide.style.minHeight = maxHeight + 'px';
      });
    }, 200)
  }
  
  $(function () {
    // Получаем нужный элемент
    if (document.querySelector('.subscriptions-swiper')) {
      var element = document.querySelector('.subscriptions-swiper');
  
      var newsVisible = function (target) {
        // let headerBottom = document.querySelectorAll('.header-bottom')[0]
        // var menuBtn = document.querySelectorAll('.menu-btn')[0]
        // var footerTop = document.querySelectorAll('.footer-top')[0]
        // Все позиции элемента
        var targetPosition = {
          top: window.pageYOffset + target.getBoundingClientRect().top,
          left: window.pageXOffset + target.getBoundingClientRect().left,
          right: window.pageXOffset + target.getBoundingClientRect().right,
          bottom: window.pageYOffset + target.getBoundingClientRect().bottom
        },
          // Получаем позиции окна
          windowPosition = {
            top: window.pageYOffset,
            left: window.pageXOffset,
            right: window.pageXOffset + document.documentElement.clientWidth,
            bottom: window.pageYOffset + document.documentElement.clientHeight
          };
  
        if (targetPosition.bottom > windowPosition.top && // Если позиция нижней части элемента больше позиции верхней чайти окна, то элемент виден сверху
          targetPosition.top < windowPosition.bottom && // Если позиция верхней части элемента меньше позиции нижней чайти окна, то элемент виден снизу
          targetPosition.right > windowPosition.left && // Если позиция правой стороны элемента больше позиции левой части окна, то элемент виден слева
          targetPosition.left < windowPosition.right) { // Если позиция левой стороны элемента меньше позиции правой чайти окна, то элемент виден справа
          // Если элемент полностью видно, то запускаем следующий код
          setMaxHeightForSubscriptions()
        } else { };
      };
  
      // Запускаем функцию при прокрутке страницы
      window.addEventListener('scroll', function () {
        newsVisible(element);
      });
  
      // А также запустим функцию сразу. А то вдруг, элемент изначально видно
      newsVisible(element);
    }
  })
  
  // //
  
  // Телефон
  
  $(function () {
    // Функция для проверки на мобильные устройства
    function isMobileDevice() {
      return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);
    }
  
    // Если устройство мобильное, то используем событие клика
    if (isMobileDevice()) {
      $('.phone').on('click', function () {
        $(this).addClass('phone--active');
      });
    } else { // Иначе используем событие ховера
      $('.phone').mouseover(
        function () {
          $(this).addClass('phone--active');
        },
      );
  
      $('.phone').mouseout(
        function () {
          $(this).removeClass('phone--active');
        }
      );
    }
  })
  
  // 
  
  
  // // Валидация sms кода 
  
  $('.form__button').on('click', function (event) {
    const verificationCode = document.getElementById('verificationCode').value;
  
    if (verificationCode.length === 6) {
      // Код введен полностью, можно идти дальше
      document.querySelector('.sms').classList.remove('sms--error');
    } else {
      // Код не введен полностью, добавляем класс ошибки
      document.querySelector('.sms').classList.add('sms--error');
    }
  });
  
  $('.form-code__input').on('input', function (event) {
    if ($(this)[0].value.length > 5) {
      document.querySelector('.sms').classList.remove('sms--error');
    } else {
  
    }
  });
  
  function updateCodeDivs(code) {
    const codeContainer = document.getElementById('codeContainer');
    const codeDivs = codeContainer.querySelectorAll('.code-div');
  
    // Удаляем существующие div'ы
    codeDivs.forEach(div => {
      codeContainer.removeChild(div);
    });
  
    // Создаем новые div'ы для каждой цифры кода
    for (let i = 0; i < code.length; i++) {
      const div = document.createElement('div');
      div.classList.add('code-div');
      div.textContent = code[i];
      codeContainer.appendChild(div);
    }
  
    // Заполняем оставшиеся места пустыми div'ами
    for (let i = code.length; i < 6; i++) {
      const div = document.createElement('div');
      div.classList.add('code-div');
      div.innerHTML = '-'
      codeContainer.appendChild(div);
    }
  }
  
  if (document.getElementById('verificationCode')) {
    updateCodeDivs(document.getElementById('verificationCode').value);
  }
  
  // //
  
  // Валидация форм
  if (document.querySelector('.form')) {
    var form = document.querySelector('.form');
    var inputs = form.querySelectorAll('.form-box__input');
  
    inputs.forEach(function (input) {
      input.addEventListener("input", function () {
        if (this.value.trim() !== "") {
          this.closest('.form-box').classList.remove('form-box--empty');
        } else {
          this.closest('.form-box').classList.add('form-box--empty');
        }
      });
    });
  
    form.addEventListener("submit", function (event) {
      inputs.forEach(function (input) {
        if (input.value.trim() === "") {
          input.closest('.form-box').classList.add('form-box--empty');
        } else {
          input.closest('.form-box').classList.remove('form-box--empty');
        }
      });
  
      var isEmpty = Array.from(inputs).some(function (input) {
        return input.value.trim() === "";
      });
  
      if (isEmpty) {
        event.preventDefault();
      }
    });
  }
  //
  
  
  if (document.querySelector('.banners-swiper--four')) {
    new Swiper('.banners-swiper', {
      slidesPerView: 4,
      speed: 750,
      spaceBetween: 10,
      autoplay: {
        delay: 5000, // задержка между слайдами в миллисекундах
        disableOnInteraction: false, // если true, автопрокрутка остановится при взаимодействии пользователя с swiper
      },
      breakpoints: {
        301: {
          slidesPerView: 1,
          speed: 750,
          spaceBetween: 10,
        },
        451: {
          slidesPerView: 1.5,
          speed: 750,
          spaceBetween: 10,
        },
        601: {
          slidesPerView: 2,
          speed: 750,
          spaceBetween: 10,
        },
        701: {
          slidesPerView: 2.5,
          speed: 750,
          spaceBetween: 10,
        },
        901: {
          slidesPerView: 3,
          speed: 750,
          spaceBetween: 10,
        },
        1201: {
          slidesPerView: 4,
          speed: 750,
          spaceBetween: 10,
        },
      }
    });
  }
  
  if (document.querySelector('.banners-swiper--main')) {
    new Swiper('.banners-swiper', {
      slidesPerView: 4,
      speed: 750,
      spaceBetween: 10,
      autoplay: {
        delay: 5000, // задержка между слайдами в миллисекундах
        disableOnInteraction: false, // если true, автопрокрутка остановится при взаимодействии пользователя с swiper
      },
      breakpoints: {
        301: {
          slidesPerView: 1,
          speed: 750,
          spaceBetween: 10,
        },
        451: {
          slidesPerView: 1.5,
          speed: 750,
          spaceBetween: 10,
        },
        601: {
          slidesPerView: 2,
          speed: 750,
          spaceBetween: 10,
        },
        701: {
          slidesPerView: 2.5,
          speed: 750,
          spaceBetween: 10,
        },
        901: {
          slidesPerView: 3,
          speed: 750,
          spaceBetween: 10,
        },
        1051: {
          slidesPerView: 2,
          speed: 750,
          spaceBetween: 10,
        },
        1201: {
          slidesPerView: 3,
          speed: 750,
          spaceBetween: 10,
        },
        1701: {
          slidesPerView: 4,
          speed: 750,
          spaceBetween: 10,
        },
      }
    });
  }
  
  if (document.querySelector('.subscriptions-swiper')) {
    new Swiper('.subscriptions-swiper', {
      slidesPerView: 4,
      // loop: true,
      speed: 750,
      spaceBetween: 10,
      autoplay: {
        delay: 5000, // задержка между слайдами в миллисекундах
        disableOnInteraction: false, // если true, автопрокрутка остановится при взаимодействии пользователя с swiper
      },
      breakpoints: {
        301: {
          slidesPerView: 1,
          speed: 750,
          spaceBetween: 10,
        },
        451: {
          slidesPerView: 1.5,
          speed: 750,
          spaceBetween: 10,
        },
        601: {
          slidesPerView: 2,
          speed: 750,
          spaceBetween: 10,
        },
        701: {
          slidesPerView: 2.5,
          speed: 750,
          spaceBetween: 10,
        },
        901: {
          slidesPerView: 3,
          speed: 750,
          spaceBetween: 10,
        },
        1051: {
          slidesPerView: 2,
          speed: 750,
          spaceBetween: 10,
        },
        1201: {
          slidesPerView: 3,
          speed: 750,
          spaceBetween: 10,
        },
        1701: {
          slidesPerView: 4,
          speed: 750,
          spaceBetween: 10,
        },
      }
    });
  }
  
  if (document.querySelector('.services-swiper')) {
    new Swiper('.services-swiper', {
      slidesPerView: 3,
      speed: 750,
      spaceBetween: 30,
      autoplay: {
        delay: 5000, // задержка между слайдами в миллисекундах
        disableOnInteraction: false, // если true, автопрокрутка остановится при взаимодействии пользователя с swiper
      },
      breakpoints: {
        301: {
          slidesPerView: 1,
          speed: 750,
          spaceBetween: 10,
        },
        769: {
          slidesPerView: 2,
          speed: 750,
          spaceBetween: 15,
        },
        1701: {
          slidesPerView: 3,
          speed: 750,
          spaceBetween: 30,
        },
      }
    });
  }
  
  var x, i, j, l, ll, selElmnt, a, b, c;
  /* Look for any elements with the class "custom-select": */
  x = document.getElementsByClassName("custom-select");
  l = x.length;
  for (i = 0; i < l; i++) {
    selElmnt = x[i].getElementsByTagName("select")[0];
    ll = selElmnt.length;
    /* For each element, create a new DIV that will act as the selected item: */
    a = document.createElement("DIV");
    a.setAttribute("class", "select-selected");
    a.innerHTML = selElmnt.options[selElmnt.selectedIndex].innerHTML;
    x[i].appendChild(a);
    /* For each element, create a new DIV that will contain the option list: */
    b = document.createElement("DIV");
    b.setAttribute("class", "select-items select-hide");
    for (j = 1; j < ll; j++) {
      /* For each option in the original select element,
      create a new DIV that will act as an option item: */
      c = document.createElement("DIV");
      c.innerHTML = selElmnt.options[j].innerHTML;
      c.addEventListener("click", function (e) {
        /* When an item is clicked, update the original select box,
        and the selected item: */
        var y, i, k, s, h, sl, yl;
        s = this.parentNode.parentNode.getElementsByTagName("select")[0];
        sl = s.length;
        h = this.parentNode.previousSibling;
        for (i = 0; i < sl; i++) {
          if (s.options[i].innerHTML == this.innerHTML) {
            s.selectedIndex = i;
            h.innerHTML = this.innerHTML;
            y = this.parentNode.getElementsByClassName("same-as-selected");
            yl = y.length;
            for (k = 0; k < yl; k++) {
              y[k].removeAttribute("class");
            }
            this.setAttribute("class", "same-as-selected");
            break;
          }
        }
        h.click();
      });
      b.appendChild(c);
    }
    x[i].appendChild(b);
    a.addEventListener("click", function (e) {
      /* When the select box is clicked, close any other select boxes,
      and open/close the current select box: */
      e.stopPropagation();
      closeAllSelect(this);
      this.nextSibling.classList.toggle("select-hide");
      this.classList.toggle("select-arrow-active");
    });
  }
  
  function closeAllSelect(elmnt) {
    /* A function that will close all select boxes in the document,
    except the current select box: */
    var x, y, i, xl, yl, arrNo = [];
    x = document.getElementsByClassName("select-items");
    y = document.getElementsByClassName("select-selected");
    xl = x.length;
    yl = y.length;
    for (i = 0; i < yl; i++) {
      if (elmnt == y[i]) {
        arrNo.push(i)
      } else {
        y[i].classList.remove("select-arrow-active");
      }
    }
    for (i = 0; i < xl; i++) {
      if (arrNo.indexOf(i)) {
        x[i].classList.add("select-hide");
      }
    }
  }
  
  document.addEventListener("click", closeAllSelect);