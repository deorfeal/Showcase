$(function () {

    $('.burger').on('click', function (event) {
      $('body').toggleClass('body--active');
    });
  
    $('.faq-item').on('click', function (event) {
      $('.faq-item--active').removeClass('faq-item--active');
      $(this).toggleClass('faq-item--active');
    });
  
    $('.menu-list-sublist__btn-text').on('mouseover', function (event) {
      for (let item of $('.menu-list-sublist__item')) {
        item.classList.remove('menu-list-sublist__item--active')
      }
      for (let item of $('.menu-list-sublist__list')) {
        item.classList.remove('menu-list-sublist__list--active')
      }
      for (let item of $('.menu-list-sublist__list')) {
        if (item.id == $(this)[0].id) {
          item.classList.add('menu-list-sublist__list--active')
        }
      }
      $(this)[0].parentNode.parentNode.classList.add('menu-list-sublist__item--active')
    });
  
    // Делаем попап и скрываем по клику вне его
    //   $(document).ready(function () {
    //     var $popupSignin = $('.transfer');
    //     var $popupSigninInner = $popupSignin.find('.transfer__inner');
    //     // Показываем или скрываем popup при клике на кнопке
    //     $('.exchange-form__button').click(function (event) {
    //         event.stopPropagation(); // Остановка всплытия события
    //         $popupSignin.addClass('transfer--active');
    //         $popupSignin.fadeIn(250, function () {
    //             // После показа попапа, делаем анимацию изменения opacity от 0 до 1
    //             $(this).animate({
    //                 opacity: 1
    //             }, 250);
    //         });
    //         $('body').addClass('body--popup');
    //     });
    //     // Скрываем popup при клике вне его области (если попап активен)
    //     $(document).click(function (event) {
    //         console.log('srm')
    //         if ($popupSignin.hasClass('transfer--active')) {
    //             if (!($popupSigninInner.is(event.target) || $popupSigninInner.has(event.target).length > 0)) {
    //                 $popupSignin.fadeOut(250);
    //                 $('body').removeClass('body--popup');
    //             }
    //         }
    //     });
    // });
  
    // Копировать значение с инпута
    // if (document.querySelector('.transfer-body__wallet-copy')) {
    //     document.querySelector('.transfer-body__wallet-copy').addEventListener('click', function () {
    //         // Находим элемент <input> по его id
    //         var inputElement = document.querySelector('.transfer-body__wallet-input');
  
    //         // Вызываем метод select() для выбора текста внутри элемента <input>
    //         inputElement.select();
  
    //         // Выполняем команду копирования выбранного текста в буфер обмена
    //         document.execCommand('copy');
  
    //         // Снимаем фокус с элемента, чтобы выделение текста не оставалось
    //         inputElement.blur();
  
    //         // Подсветка кнопки для обратной связи
    //         this.classList.add('copied');
  
    //         // Через какое-то время убираем подсветку кнопки
    //         setTimeout(function () {
    //             document.querySelector('.transfer-body__wallet-copy').classList.remove('copied');
    //         }, 500);
    //     });
    // }
  })
  
  // Aos - the right initialisation
  jQuery(document).ready(function () {
    (function () {
      // your page initialization code here
      // the DOM will be available here
      AOS.init({
        duration: 750,
        offset: 0, // offset (in px) from the original trigger point
        anchorPlacement: 'top-bottom', // define where the AOS animations will be triggered
      });
    })();
  });
  // //
  
  $(function () {
    // Функция для проверки на мобильные устройства
    function isMobileDevice() {
      return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);
    }
  
    // Если устройство мобильное, то используем событие клика
    if (isMobileDevice()) {
  
      $(document).on('click', function (event) {
        // Проверяем, является ли цель клика элементом с классом '.menu-list__item--categories'
        if (!$(event.target).closest('.menu-list__item--categories').length) {
          // Если нет, убираем класс 'menu-list__item--active' у всех элементов с этим классом
          $('.menu-list__item--categories').removeClass('menu-list__item--active');
        }
  
           // Проверяем, является ли цель клика элементом с классом '.menu-list__item--categories'
           if (!$(event.target).closest('.lang').length) {
            // Если нет, убираем класс 'menu-list__item--active' у всех элементов с этим классом
            $('.lang').removeClass('lang--active');
          }
      });
  
      $('.menu-list__item--categories').on('click', function () {
        $(this).addClass('menu-list__item--active');
      });
  
      $('.phone').on('click', function () {
        $(this).addClass('phone--active');
      });
  
      $('.lang').on('click', function () {
        $(this).toggleClass('lang--active');
      });
  
    } else { // Иначе используем событие ховера
      $('.menu-list__item--categories').mouseover(
        function () {
          $(this).addClass('menu-list__item--active');
        },
  
      );
  
      $('.menu-list__item--categories').mouseout(
        function () {
          $(this).removeClass('menu-list__item--active');
        }
      );
  
      $('.phone').mouseover(
        function () {
          $(this).addClass('phone--active');
        },
      );
  
      $('.phone').mouseout(
        function () {
          $(this).removeClass('phone--active');
        }
      );
  
      $('.lang').mouseover(
        function () {
          $(this).addClass('lang--active');
        },
      );
  
      $('.lang').mouseout(
        function () {
          $(this).removeClass('lang--active');
        }
      );
    }
  })
  
  // Делаем высоту слайдов одинаковой
  function setMaxHeightForNews() {
      setTimeout(() => {
          let heights = [];
  
          // Получаем высоту каждого элемента и добавляем в массив
          document.querySelectorAll('.news-slide').forEach(function (slide) {
              heights.push(slide.getBoundingClientRect().height);
          });
  
          let maxHeight = Math.max(...heights);
  
          // Устанавливаем высоту каждого элемента в самую большую высоту
          document.querySelectorAll('.news-slide').forEach(function (slide) {
              slide.style.minHeight = maxHeight + 'px';
          });
      }, 200)
  }
  
  $(function () {
      // Получаем нужный элемент
      if (document.querySelector('.news-swiper')) {
          var element = document.querySelector('.news-swiper');
  
          var newsVisible = function (target) {
              // let headerBottom = document.querySelectorAll('.header-bottom')[0]
              // var menuBtn = document.querySelectorAll('.menu-btn')[0]
              // var footerTop = document.querySelectorAll('.footer-top')[0]
              // Все позиции элемента
              var targetPosition = {
                      top: window.pageYOffset + target.getBoundingClientRect().top,
                      left: window.pageXOffset + target.getBoundingClientRect().left,
                      right: window.pageXOffset + target.getBoundingClientRect().right,
                      bottom: window.pageYOffset + target.getBoundingClientRect().bottom
                  },
                  // Получаем позиции окна
                  windowPosition = {
                      top: window.pageYOffset,
                      left: window.pageXOffset,
                      right: window.pageXOffset + document.documentElement.clientWidth,
                      bottom: window.pageYOffset + document.documentElement.clientHeight
                  };
  
              if (targetPosition.bottom > windowPosition.top && // Если позиция нижней части элемента больше позиции верхней чайти окна, то элемент виден сверху
                  targetPosition.top < windowPosition.bottom && // Если позиция верхней части элемента меньше позиции нижней чайти окна, то элемент виден снизу
                  targetPosition.right > windowPosition.left && // Если позиция правой стороны элемента больше позиции левой части окна, то элемент виден слева
                  targetPosition.left < windowPosition.right) { // Если позиция левой стороны элемента меньше позиции правой чайти окна, то элемент виден справа
                  // Если элемент полностью видно, то запускаем следующий код
                  setTimeout(() => {
                    setMaxHeightForNews()
                  }, 1000)
              } else {};
          };
  
          // Запускаем функцию при прокрутке страницы
          window.addEventListener('scroll', function () {
              newsVisible(element);
          });
  
          // А также запустим функцию сразу. А то вдруг, элемент изначально видно
          newsVisible(element);
      }
  })
  
  // 
  
  function setMaxHeightForHeading() {
    setTimeout(() => {
        let heights = [];
  
        // Получаем высоту каждого элемента и добавляем в массив
        document.querySelectorAll('.heading-slide').forEach(function (slide) {
            heights.push(slide.getBoundingClientRect().height);
        });
  
        let maxHeight = Math.max(...heights);
  
        // Устанавливаем высоту каждого элемента в самую большую высоту
        document.querySelectorAll('.heading-slide').forEach(function (slide) {
            slide.style.minHeight = maxHeight + 'px';
        });
    }, 200)
  }
  
  $(function () {
    // Получаем нужный элемент
    if (document.querySelector('.heading-swiper')) {
        var element = document.querySelector('.heading-swiper');
  
        var newsVisible = function (target) {
            // let headerBottom = document.querySelectorAll('.header-bottom')[0]
            // var menuBtn = document.querySelectorAll('.menu-btn')[0]
            // var footerTop = document.querySelectorAll('.footer-top')[0]
            // Все позиции элемента
            var targetPosition = {
                    top: window.pageYOffset + target.getBoundingClientRect().top,
                    left: window.pageXOffset + target.getBoundingClientRect().left,
                    right: window.pageXOffset + target.getBoundingClientRect().right,
                    bottom: window.pageYOffset + target.getBoundingClientRect().bottom
                },
                // Получаем позиции окна
                windowPosition = {
                    top: window.pageYOffset,
                    left: window.pageXOffset,
                    right: window.pageXOffset + document.documentElement.clientWidth,
                    bottom: window.pageYOffset + document.documentElement.clientHeight
                };
  
            if (targetPosition.bottom > windowPosition.top && // Если позиция нижней части элемента больше позиции верхней чайти окна, то элемент виден сверху
                targetPosition.top < windowPosition.bottom && // Если позиция верхней части элемента меньше позиции нижней чайти окна, то элемент виден снизу
                targetPosition.right > windowPosition.left && // Если позиция правой стороны элемента больше позиции левой части окна, то элемент виден слева
                targetPosition.left < windowPosition.right) { // Если позиция левой стороны элемента меньше позиции правой чайти окна, то элемент виден справа
                // Если элемент полностью видно, то запускаем следующий код
                setTimeout(() => {
                  setMaxHeightForHeading()
                }, 1000)
            } else {};
        };
  
        // Запускаем функцию при прокрутке страницы
        window.addEventListener('scroll', function () {
            newsVisible(element);
        });
  
        // А также запустим функцию сразу. А то вдруг, элемент изначально видно
        newsVisible(element);
    }
  })
  //
  
  new Swiper('.news-swiper', {
    slidesPerView: 2.5,
    loop: true,
    speed: 750,
    spaceBetween: 30,
    navigation: {
      prevEl: '.arrow--prev',
      nextEl: '.arrow--next',
    },
    pagination: {
      el: '.bullets',
      type: 'bullets',
      clickable: true,
    },
    breakpoints: {
      301: {
        slidesPerView: 1.25,
        loop: true,
        speed: 750,
        spaceBetween: 15,
      },
      751: {
        slidesPerView: 1.5,
        loop: true,
        speed: 750,
        spaceBetween: 15,
      },
      901: {
        slidesPerView: 1.75,
        loop: true,
        speed: 750,
        spaceBetween: 30,
      },
      1151: {
        slidesPerView: 2,
        loop: true,
        speed: 750,
        spaceBetween: 30,
      },
      1351: {
        slidesPerView: 2.5,
        loop: true,
        speed: 750,
        spaceBetween: 30,
      },
    }
  });
  
  new Swiper('.heading-swiper', {
    slidesPerView: 1,
    loop: true,
    speed: 750,
    spaceBetween: 0,
    navigation: {
      prevEl: '.arrow--prev',
      nextEl: '.arrow--next',
    },
    pagination: {
      el: '.fractions',
      type: 'fraction',
    },
    autoplay: {
      delay: 5000, // Delay between slides in milliseconds
      disableOnInteraction: false, // Set to false to continue autoplay after user interaction
    },
  });
  
  if (document.querySelector('.сolleagues')) {
  }
  // Initialize InfiniteSlideV2
  $(function () {
    $('#infiniteslide-1').infiniteslide({
      'speed': 75,
      'direction': 'left',
      'pauseonhover': true,
      'responsive': false,
      'clone': 3
    });
  });
  
  $(function () {
    $('#infiniteslide-2').infiniteslide({
      'speed': 75,
      'direction': 'right',
      'pauseonhover': true,
      'responsive': false,
      'clone': 3
    });
  });
  
  var x, i, j, l, ll, selElmnt, a, b, c;
  /* Look for any elements with the class "custom-select": */
  x = document.getElementsByClassName("custom-select");
  l = x.length;
  for (i = 0; i < l; i++) {
    selElmnt = x[i].getElementsByTagName("select")[0];
    ll = selElmnt.length;
    /* For each element, create a new DIV that will act as the selected item: */
    a = document.createElement("DIV");
    a.setAttribute("class", "select-selected");
    a.innerHTML = selElmnt.options[selElmnt.selectedIndex].innerHTML;
    x[i].appendChild(a);
    /* For each element, create a new DIV that will contain the option list: */
    b = document.createElement("DIV");
    b.setAttribute("class", "select-items select-hide");
    for (j = 1; j < ll; j++) {
      /* For each option in the original select element,
      create a new DIV that will act as an option item: */
      c = document.createElement("DIV");
      c.innerHTML = selElmnt.options[j].innerHTML;
      c.addEventListener("click", function (e) {
        /* When an item is clicked, update the original select box,
        and the selected item: */
        var y, i, k, s, h, sl, yl;
        s = this.parentNode.parentNode.getElementsByTagName("select")[0];
        sl = s.length;
        h = this.parentNode.previousSibling;
        for (i = 0; i < sl; i++) {
          if (s.options[i].innerHTML == this.innerHTML) {
            s.selectedIndex = i;
            h.innerHTML = this.innerHTML;
            y = this.parentNode.getElementsByClassName("same-as-selected");
            yl = y.length;
            for (k = 0; k < yl; k++) {
              y[k].removeAttribute("class");
            }
            this.setAttribute("class", "same-as-selected");
            break;
          }
        }
        h.click();
      });
      b.appendChild(c);
    }
    x[i].appendChild(b);
    a.addEventListener("click", function (e) {
      /* When the select box is clicked, close any other select boxes,
      and open/close the current select box: */
      e.stopPropagation();
      closeAllSelect(this);
      this.nextSibling.classList.toggle("select-hide");
      this.classList.toggle("select-arrow-active");
    });
  }
  
  function closeAllSelect(elmnt) {
    /* A function that will close all select boxes in the document,
    except the current select box: */
    var x, y, i, xl, yl, arrNo = [];
    x = document.getElementsByClassName("select-items");
    y = document.getElementsByClassName("select-selected");
    xl = x.length;
    yl = y.length;
    for (i = 0; i < yl; i++) {
      if (elmnt == y[i]) {
        arrNo.push(i)
      } else {
        y[i].classList.remove("select-arrow-active");
      }
    }
    for (i = 0; i < xl; i++) {
      if (arrNo.indexOf(i)) {
        x[i].classList.add("select-hide");
      }
    }
  }
  
  /* If the user clicks anywhere outside the select box,
  then close all select boxes: */
  document.addEventListener("click", closeAllSelect);
  
  // 