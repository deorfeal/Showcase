$(function () {


    // Проверяем, поддерживает ли браузер события touch
    var isTouchDevice = 'ontouchstart' in window || navigator.maxTouchPoints > 0 || navigator.msMaxTouchPoints > 0;

    // Если это устройство с сенсорным экраном (мобильное устройство), применяем обработчик клика
    if (isTouchDevice) {
        $('body').addClass('body--mobile')

        $('.files__close').on('click', function (event) {
            event.stopPropagation();
            $(this).closest('.bills-item').removeClass('bills-item--active');
            $('body').removeClass('body--bills');
        });

        $('.bills-item__title').on('click', function (event) {
            if (document.querySelector('.bills-item--active')) {

            } else {
                $('.bills-item--active').removeClass('bills-item--active')
                $(this).closest('.bills-item').addClass('bills-item--active');
                $('body').addClass('body--bills');
            }
        });
    } else {
        // Если это не мобильное устройство, применяем обработчики наведения и покидания курсора
        $('.bills-item__title').on('mouseover', function (event) {
            $(this).closest('.bills-item').addClass('bills-item--active');
        });

        $('.bills-item__title').on('mouseleave', function (event) {
            $(this).closest('.bills-item').removeClass('bills-item--active');
        });
    }



    $('.burger').on('click', function (event) {
        $('body').toggleClass('body--active');
    });

    $('.containers-box__radio').on('click', function (event) {
        $('.containers-box--active').removeClass('containers-box--active')
        $(this).closest('.containers-box').addClass('containers-box--active');

        for (let item of $('.containers-box__radio')) {
            item.checked = false
        }
        $(this)[0].checked = true
    });


    // При клике на "Показать пин-код" - показываем пин код и наоборот 
    $('.boxes-top__pin').on('click', function (event) {
        $(this).toggleClass('boxes-top__pin--active');
    });

    // Создаем анимацию лейблов в инпуте 
    $('.form-box__input').on('click', function (event) {
        $(this).closest('.form-box').addClass('form-box--active')
    });

    $('.contact-form__box-textarea').on('click', function (event) {
        $(this).closest('.form-box').addClass('form-box--active')
    });

    // $('.form-box__input').on('input', function (event) {
    //     $(this).closest('.form-box').addClass('form-box--active')
    //     if ($(this)[0].value.length != 0) {
    //         $(this).closest('.form-box').addClass('form-box--active')
    //     } else if ($(this)[0].value.length == 0) {
    //         $(this).closest('.form-box').removeClass('form-box--active')
    //     }
    // });

    // $('.contact-form__box-textarea').on('input', function (event) {
    //     if ($(this)[0].value.length != 0) {
    //         $(this).closest('.form-box').addClass('form-box--active')
    //     } else if ($(this)[0].value.length == 0) {
    //         $(this).closest('.form-box').removeClass('form-box--active')
    //     }
    // });

    //

    // Показываем/прячем пароль
    $('.form-box__eye').on('click', function (event) {
        if ($(this).closest('.form-box').find('.form-box__input').attr('type') === 'password') {
            $(this).closest('.form-box').find('.form-box__input').attr('type', 'text');
            $(this).closest('.form-box').addClass('form-box--act');
        } else {
            $(this).closest('.form-box').find('.form-box__input').attr('type', 'password');
            $(this).closest('.form-box').removeClass('form-box--act');
        }
    });
    //

    // Включае/выключаем автопродление оплаты 
    $('.autopayment__check').on('click', function (event) {
        if ($('.autopayment__btn--active')[0].id == 0) {
            $('.autopayment__btn--active').removeClass('autopayment__btn--active')
            for (let item of $('.autopayment__btn')) {
                if (item.id == 1) {
                    item.classList.add('autopayment__btn--active')
                }
            }
        } else {
            $('.autopayment__btn--active').removeClass('autopayment__btn--active')
            for (let item of $('.autopayment__btn')) {
                if (item.id == 0) {
                    item.classList.add('autopayment__btn--active')
                }
            }
        }
    });

    if (document.querySelector('.time-box__input')) {
        // Находим все кнопки и инпуты
        const minusButton = document.querySelector('.time__button--minus');
        const plusButton = document.querySelector('.time__button--plus');
        const input = document.querySelector('.time-box__input');
        const items = document.querySelectorAll('.time-box__item');

        // Обработчик клика на кнопку "minus"
        minusButton.addEventListener('click', () => {
            // Получаем текущее значение
            let value = parseInt(input.value);

            // Уменьшаем значение на 1, если оно больше 1
            if (value > 1) {
                value--;

                // Устанавливаем новое значение
                input.value = value;

                // Убираем класс "time-box__item--active" у всех элементов
                $('.time-box__item--active').removeClass('time-box__item--active');

                // Проверяем и устанавливаем класс "time-box__item--active" для нужного элемента
                items.forEach(item => {
                    if (item.id == value) {
                        item.classList.add('time-box__item--active')
                    }
                });
            }
        });

        // Обработчик клика на кнопку "plus"
        plusButton.addEventListener('click', () => {
            // Получаем текущее значение
            let value = parseInt(input.value);

            // Увеличиваем значение на 1, если оно меньше 3
            if (value < 3) {
                value++;

                // Устанавливаем новое значение
                input.value = value;

                // Убираем класс "time-box__item--active" у всех элементов
                $('.time-box__item--active').removeClass('time-box__item--active');

                // Проверяем и устанавливаем класс "time-box__item--active" для нужного элемента
                items.forEach(item => {
                    if (item.id == value) {
                        item.classList.add('time-box__item--active')
                    }
                });
            }
        });
    }

    // Делаем попап и скрываем по клику вне его
    $(document).ready(function () {
        var $popupPay = $('.popup--pay');
        var $popupPayInner = $popupPay.find('.popup__inner');

        var $popupCheckSuccess = $('.popup--check-success');
        var $popupCheckSuccessInner = $popupCheckSuccess.find('.popup__inner');

        var $popupRentEnd = $('.popup--rent-end');
        var $popupRentEndInner = $popupRentEnd.find('.popup__inner');

        var $popupRentEndSuccess = $('.popup--rent-end-success');
        var $popupRentEndSuccessInner = $popupRentEndSuccess.find('.popup__inner');


        var $popupAutopaymentEnd = $('.popup--autopayment-end');
        var $popupAutopaymentEndInner = $popupAutopaymentEnd.find('.popup__inner');

        var $popupAutopaymentEndSuccess = $('.popup--autopayment-end-success');
        var $popupAutopaymentEndSuccessInner = $popupAutopaymentEndSuccess.find('.popup__inner');


        var $popupExpiredAccounts = $('.popup--expired-accounts');
        var $popupExpiredAccountsInner = $popupExpiredAccounts.find('.popup__inner');

        // Показываем или скрываем popup при клике на кнопке
        $('.boxes-item__links-link--payment').click(function (event) {
            event.stopPropagation(); // Остановка всплытия события
            $popupPay.addClass('popup--active');
            $popupPay.fadeIn(250, function () {
                // После показа попапа, делаем анимацию изменения opacity от 0 до 1
                $(this).animate({
                    opacity: 1
                }, 250);
            });
            $('body').addClass('body--popup');
        });

        // Показываем или скрываем popup при клике на кнопке
        $('.previously__button').click(function (event) {
            event.stopPropagation(); // Остановка всплытия события
            $popupCheckSuccess.addClass('popup--active');
            $popupCheckSuccess.fadeIn(250, function () {
                // После показа попапа, делаем анимацию изменения opacity от 0 до 1
                $(this).animate({
                    opacity: 1
                }, 250);
            });
            $('body').addClass('body--popup');
        });

        // Показываем или скрываем popup при клике на кнопке
        $('.boxes-item__links-link--end').click(function (event) {
            event.stopPropagation(); // Остановка всплытия события
            $popupRentEnd.addClass('popup--active');
            $popupRentEnd.fadeIn(250, function () {
                // После показа попапа, делаем анимацию изменения opacity от 0 до 1
                $(this).animate({
                    opacity: 1
                }, 250);
            });
            $('body').addClass('body--popup');
        });

        // Показываем или скрываем popup при клике на кнопке
        $('.popup__link--rent-end').click(function (event) {
            setTimeout(() => {
                event.stopPropagation(); // Остановка всплытия события
                $popupRentEndSuccess.addClass('popup--active');
                $popupRentEndSuccess.fadeIn(250, function () {
                    // После показа попапа, делаем анимацию изменения opacity от 0 до 1
                    $(this).animate({
                        opacity: 1
                    }, 250);
                });
                $('body').addClass('body--popup');
            }, 50)
        });

        // Показываем или скрываем popup при клике на кнопке
        $('.boxes-item__text--disable').click(function (event) {
            setTimeout(() => {
                event.stopPropagation(); // Остановка всплытия события
                $popupAutopaymentEnd.addClass('popup--active');
                $popupAutopaymentEnd.fadeIn(250, function () {
                    // После показа попапа, делаем анимацию изменения opacity от 0 до 1
                    $(this).animate({
                        opacity: 1
                    }, 250);
                });
                $('body').addClass('body--popup');
            }, 50)
        });

        // Показываем или скрываем popup при клике на кнопке
        $('.popup__link--autopayment-end-success').click(function (event) {
            setTimeout(() => {
                event.stopPropagation(); // Остановка всплытия события
                $popupAutopaymentEndSuccess.addClass('popup--active');
                $popupAutopaymentEndSuccess.fadeIn(250, function () {
                    // После показа попапа, делаем анимацию изменения opacity от 0 до 1
                    $(this).animate({
                        opacity: 1
                    }, 250);
                });
                $('body').addClass('body--popup');
            }, 50)
        });

        // Показываем или скрываем popup при клике на кнопке
        $('.boxes-item__links-link--expired').click(function (event) {
            setTimeout(() => {
                event.stopPropagation(); // Остановка всплытия события
                $popupExpiredAccounts.addClass('popup--active');
                $popupExpiredAccounts.fadeIn(250, function () {
                    // После показа попапа, делаем анимацию изменения opacity от 0 до 1
                    $(this).animate({
                        opacity: 1
                    }, 250);
                });
                $('body').addClass('body--popup');
            }, 50)
        });

        // Показываем или скрываем popup при клике на кнопке
        $('.expired-accounts-item__link').click(function (event) {
            setTimeout(() => {
                event.stopPropagation(); // Остановка всплытия события
                $popupPay.addClass('popup--active');
                $popupPay.fadeIn(250, function () {
                    // После показа попапа, делаем анимацию изменения opacity от 0 до 1
                    $(this).animate({
                        opacity: 1
                    }, 250);
                });
                $('body').addClass('body--popup');
            }, 50)
        });

        $('.close').click(function (event) {
            $('.popup').fadeOut(250);
            $('body').removeClass('body--popup');
        });

        $('.popup__link--rent-end').click(function (event) {
            $('.popup').fadeOut(250);
            $('body').removeClass('body--popup');
        });

        $('.popup__link--autopayment-end-success').click(function (event) {
            $('.popup').fadeOut(250);
            $('body').removeClass('body--popup');
        });

        $('.expired-accounts-item__link').click(function (event) {
            $('.popup').fadeOut(250);
            $('body').removeClass('body--popup');
        });

        // Скрываем popup при клике вне его области (если попап активен)
        $(document).click(function (event) {
            if ($popupPay.hasClass('popup--active')) {
                if (!($popupPayInner.is(event.target) || $popupPayInner.has(event.target).length > 0)) {
                    $popupPay.fadeOut(250);
                    $('body').removeClass('body--popup');
                }
            }
        });

        // Скрываем popup при клике вне его области (если попап активен)
        $(document).click(function (event) {
            if ($popupCheckSuccess.hasClass('popup--active')) {
                if (!($popupCheckSuccessInner.is(event.target) || $popupCheckSuccessInner.has(event.target).length > 0)) {
                    $popupCheckSuccess.fadeOut(250);
                    $('body').removeClass('body--popup');
                }
            }
        });

        // Скрываем popup при клике вне его области (если попап активен)
        $(document).click(function (event) {
            if ($popupRentEnd.hasClass('popup--active')) {
                if (!($popupRentEndInner.is(event.target) || $popupRentEndInner.has(event.target).length > 0)) {
                    $popupRentEnd.fadeOut(250);
                    $('body').removeClass('body--popup');
                }
            }
        });

        // Скрываем popup при клике вне его области (если попап активен)
        $(document).click(function (event) {
            if ($popupRentEndSuccess.hasClass('popup--active')) {
                if (!($popupRentEndSuccessInner.is(event.target) || $popupRentEndSuccessInner.has(event.target).length > 0)) {
                    $popupRentEndSuccess.fadeOut(250);
                    $('body').removeClass('body--popup');
                }
            }
        });

        // Скрываем popup при клике вне его области (если попап активен)
        $(document).click(function (event) {
            if ($popupAutopaymentEnd.hasClass('popup--active')) {
                if (!($popupAutopaymentEndInner.is(event.target) || $popupAutopaymentEndInner.has(event.target).length > 0)) {
                    $popupAutopaymentEnd.fadeOut(250);
                    $('body').removeClass('body--popup');
                }
            }
        });

        // Скрываем popup при клике вне его области (если попап активен)
        $(document).click(function (event) {
            if ($popupAutopaymentEndSuccess.hasClass('popup--active')) {
                if (!($popupAutopaymentEndSuccessInner.is(event.target) || $popupAutopaymentEndSuccessInner.has(event.target).length > 0)) {
                    $popupAutopaymentEndSuccess.fadeOut(250);
                    $('body').removeClass('body--popup');
                }
            }
        });

        // Скрываем popup при клике вне его области (если попап активен)
        $(document).click(function (event) {
            if ($popupExpiredAccounts.hasClass('popup--active')) {
                if (!($popupExpiredAccountsInner.is(event.target) || $popupExpiredAccountsInner.has(event.target).length > 0)) {
                    $popupExpiredAccounts.fadeOut(250);
                    $('body').removeClass('body--popup');
                }
            }
        });
    });
})

// Делаем высоту слайдов одинаковой
// function setMaxHeightForProjects() {
//     setTimeout(() => {
//         let heights = [];

//         // Получаем высоту каждого элемента и добавляем в массив
//         document.querySelectorAll('.projects-swiper__slide').forEach(function (slide) {
//             heights.push(slide.getBoundingClientRect().height);
//         });

//         let maxHeight = Math.max(...heights);

//         // Устанавливаем высоту каждого элемента в самую большую высоту
//         document.querySelectorAll('.projects-swiper__slide').forEach(function (slide) {
//             slide.style.minHeight = maxHeight + 'px';
//         });
//     }, 200)
// }

// $(function () {
//     // Получаем нужный элемент
//     if (document.querySelector('.projects')) {
//         var element = document.querySelector('.projects');

//         var newsVisible = function (target) {
//             // let headerBottom = document.querySelectorAll('.header-bottom')[0]
//             // var menuBtn = document.querySelectorAll('.menu-btn')[0]
//             // var footerTop = document.querySelectorAll('.footer-top')[0]
//             // Все позиции элемента
//             var targetPosition = {
//                     top: window.pageYOffset + target.getBoundingClientRect().top,
//                     left: window.pageXOffset + target.getBoundingClientRect().left,
//                     right: window.pageXOffset + target.getBoundingClientRect().right,
//                     bottom: window.pageYOffset + target.getBoundingClientRect().bottom
//                 },
//                 // Получаем позиции окна
//                 windowPosition = {
//                     top: window.pageYOffset,
//                     left: window.pageXOffset,
//                     right: window.pageXOffset + document.documentElement.clientWidth,
//                     bottom: window.pageYOffset + document.documentElement.clientHeight
//                 };

//             if (targetPosition.bottom > windowPosition.top && // Если позиция нижней части элемента больше позиции верхней чайти окна, то элемент виден сверху
//                 targetPosition.top < windowPosition.bottom && // Если позиция верхней части элемента меньше позиции нижней чайти окна, то элемент виден снизу
//                 targetPosition.right > windowPosition.left && // Если позиция правой стороны элемента больше позиции левой части окна, то элемент виден слева
//                 targetPosition.left < windowPosition.right) { // Если позиция левой стороны элемента меньше позиции правой чайти окна, то элемент виден справа
//                 // Если элемент полностью видно, то запускаем следующий код
//                 setTimeout(() => {
//                     setMaxHeightForProjects()
//                 }, 1000)
//             } else {};
//         };

//         // Запускаем функцию при прокрутке страницы
//         window.addEventListener('scroll', function () {
//             newsVisible(element);
//         });

//         // А также запустим функцию сразу. А то вдруг, элемент изначально видно
//         newsVisible(element);
//     }
// })
//

// new Swiper('.catalog-first-swiper', {
//     slidesPerView: 6,
//     loop: true,
//     initialSlide: 0,
//     centeredSlides: true,
//     speed: 1000,
//     navigation: {
//         prevEl: '.catalog-first-swiper-button-prev',
//         nextEl: '.catalog-first-swiper-button-next',
//     },
//     pagination: {
//         el: '.recalls-swiper__pagination',
//         type: 'bullets',
//     },
//     autoplay: {
//         delay: 5000, // задержка между слайдами в миллисекундах
//         disableOnInteraction: false, // если true, автопрокрутка остановится при взаимодействии пользователя с swiper
//     },
//     breakpoints: {
//         301: {
//             slidesPerView: 2.2,
//             centeredSlides: true,
//             initialSlide: 1,
//             slidesPerGroup: 1,
//             loopedSlides: 6,
//         },
//         501: {
//             slidesPerView: 2.5,
//             centeredSlides: true,
//             initialSlide: 1,
//             slidesPerGroup: 1,
//             loopedSlides: 6,
//         },
//     }
// });

// Aos - the right initialisation
// jQuery(document).ready(function () {
//     (function () {
//         // your page initialization code here
//         // the DOM will be available here
//         AOS.init({
//             duration: 1000,
//             offset: 0, // offset (in px) from the original trigger point
//             anchorPlacement: 'top-bottom', // define where the AOS animations will be triggered
//         });
//     })();
// });
// //

// timer
// setInterval(() => {
//     let timeNow = new Date() // Время сейчас
//     let timeNowTimeStamp = timeNow.getTime() // сколько прошоло с 1970 до теперешнего момената
//     // console.log(timeNowTimeStamp)

//     let ourDate = new Date('2023-03-19T23:14:00') // Время нашего знакомства
//     let ourDateTimeStamp = ourDate.getTime() // сколько прошоло с 1970 до теперешнего момената
//     // console.log(ourDateTimeStamp)

//     let timeStampMilliseconds = ourDateTimeStamp - timeNowTimeStamp // Миллисекунды ( разница между временем теперь и временем нашей встречи )

//     let secondsOfTimeStamp = timeStampMilliseconds / 1000 // Секунды - разницы
//     let minutesOfTimeStamp = secondsOfTimeStamp / 60 // минуты - разницы
//     let hoursOfTimeStamp = minutesOfTimeStamp / 60 // часы - разницы
//     let daysOfTimeStamp = hoursOfTimeStamp / 24 // Дни - разницы

//     let secondsOfTimeStampFloor = Math.floor(timeStampMilliseconds / 1000) // Секунды - разницы
//     let minutesOfTimeStampFloor = Math.floor(secondsOfTimeStamp / 60) // минуты - разницы
//     let secondsRamnant = secondsOfTimeStampFloor - (minutesOfTimeStampFloor * 60) // Остаток секунд - то есть наши секунды в Html
//     let hoursOfTimeStampFloor = Math.floor(minutesOfTimeStamp / 60) // часы - разницы
//     let minutesRamnant = minutesOfTimeStampFloor - (hoursOfTimeStampFloor * 60) // Остаток минут - то есть наши минуты в Html
//     let daysOfTimeStampFloor = Math.floor(hoursOfTimeStamp / 24) // Дни - разницы
//     let hoursRamnant = hoursOfTimeStampFloor - (daysOfTimeStampFloor * 24) // Остаток часов - то есть наши часы в Html

//     let hours = document.querySelector('.header-bottom-body-row__item-text--hours')

//     let minutes = document.querySelector('.header-bottom-body-row__item-text--minutes')

//     let seconds = document.querySelector('.header-bottom-body-row__item-text--seconds')

//     // // //

//     seconds.innerHTML = secondsRamnant

//     if (hoursRamnant < 10) {
//         console.log(String(hoursRamnant)[0])
//         hours.innerHTML = '0' + String(hoursRamnant) + '<span>:</span>'
//     } else {
//         hours.innerHTML = String(hoursRamnant) + '<span>:</span>'
//     }

//     if (minutesRamnant < 10) {
//         minutes.innerHTML = '0' + String(minutesRamnant) + '<span>:</span>'
//     } else {
//         minutes.innerHTML = String(minutesRamnant) + '<span>:</span>'
//     }

//     if (secondsRamnant < 10) {
//         seconds.innerHTML = '0' + String(secondsRamnant)
//     } else {
//         seconds.innerHTML = String(secondsRamnant)
//     }
// }, 1000)
// //

// typed js

// $(".typed").typed({
//     strings: ["Графічним дизайнерам", "Початковим веб-дизайнерам", "Студентам/школярам", "Офісним працівникам"],
//     // Optionally use an HTML element to grab strings from (must wrap each string in a <p>)
//     stringsElement: null,
//     // typing speed
//     typeSpeed: 30,
//     // time before typing starts
//     startDelay: 1200,
//     // backspacing speed
//     backSpeed: 20,
//     // time before backspacing
//     backDelay: 500,
//     // loop
//     loop: true,
//     // false = infinite
//     loopCount: 5,
//     // show cursor
//     showCursor: false,
//     // character for cursor
//     cursorChar: "|",
//     // attribute to type (null == text)
//     attr: null,
//     // either html or text
//     contentType: 'html',
//     // call when done callback function
//     callback: function () {},
//     // starting callback function before each string
//     preStringTyped: function () {},
//     //callback for every typed string
//     onStringTyped: function () {},
//     // callback for reset
//     resetCallback: function () {}
// });
// //

// Phone mask

// window.addEventListener("DOMContentLoaded", function () {
//     [].forEach.call(document.querySelectorAll('.tel'), function (input) {
//         var keyCode;

//         function mask(event) {
//             event.keyCode && (keyCode = event.keyCode);
//             var pos = this.selectionStart;
//             if (pos < 3) event.preventDefault();
//             var matrix = "+7 (___) ___-____",
//                 i = 0,
//                 def = matrix.replace(/\D/g, ""),
//                 val = this.value.replace(/\D/g, ""),
//                 new_value = matrix.replace(/[_\d]/g, function (a) {
//                     return i < val.length ? val.charAt(i++) || def.charAt(i) : a
//                 });
//             i = new_value.indexOf("_");
//             if (i != -1) {
//                 i < 5 && (i = 3);
//                 new_value = new_value.slice(0, i)
//             }
//             var reg = matrix.substr(0, this.value.length).replace(/_+/g,
//                 function (a) {
//                     return "\\d{1," + a.length + "}"
//                 }).replace(/[+()]/g, "\\$&");
//             reg = new RegExp("^" + reg + "$");
//             if (!reg.test(this.value) || this.value.length < 5 || keyCode > 47 && keyCode < 58) this.value = new_value;
//             if (event.type == "blur" && this.value.length < 5) this.value = ""
//         }

//         input.addEventListener("input", mask, false);
//         input.addEventListener("focus", mask, false);
//         input.addEventListener("blur", mask, false);
//         input.addEventListener("keydown", mask, false)

//     });

// });

// //

// Visibilyto of element on scroll or not
// $(function () {
//     // Получаем нужный элемент
//     var element = document.querySelector('footer');

//     var Visible = function (target) {
//         // let headerBottom = document.querySelectorAll('.header-bottom')[0]
//         // var menuBtn = document.querySelectorAll('.menu-btn')[0]
//         // var footerTop = document.querySelectorAll('.footer-top')[0]
//         // Все позиции элемента
//         var targetPosition = {
//                 top: window.pageYOffset + target.getBoundingClientRect().top,
//                 left: window.pageXOffset + target.getBoundingClientRect().left,
//                 right: window.pageXOffset + target.getBoundingClientRect().right,
//                 bottom: window.pageYOffset + target.getBoundingClientRect().bottom
//             },
//             // Получаем позиции окна
//             windowPosition = {
//                 top: window.pageYOffset,
//                 left: window.pageXOffset,
//                 right: window.pageXOffset + document.documentElement.clientWidth,
//                 bottom: window.pageYOffset + document.documentElement.clientHeight
//             };

//         if (targetPosition.bottom > windowPosition.top && // Если позиция нижней части элемента больше позиции верхней чайти окна, то элемент виден сверху
//             targetPosition.top < windowPosition.bottom && // Если позиция верхней части элемента меньше позиции нижней чайти окна, то элемент виден снизу
//             targetPosition.right > windowPosition.left && // Если позиция правой стороны элемента больше позиции левой части окна, то элемент виден слева
//             targetPosition.left < windowPosition.right) { // Если позиция левой стороны элемента меньше позиции правой чайти окна, то элемент виден справа
//             // Если элемент полностью видно, то запускаем следующий код
//             $('.connection__bottom-btn').addClass('connection__bottom-btn--none')
//             $('.connection').addClass('connection-margin')

//         } else {
//             $('.connection__bottom-btn').removeClass('connection__bottom-btn--none')
//             $('.connection').removeClass('connection-margin')
//         };
//     };

//     // Запускаем функцию при прокрутке страницы
//     window.addEventListener('scroll', function () {
//         Visible(element);
//     });

//     // А также запустим функцию сразу. А то вдруг, элемент изначально видно
//     Visible(element);
// })
// // 