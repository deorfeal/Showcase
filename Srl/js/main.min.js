$(function () {
    // Код просмотра до после ( картинки )
    let slides = document.querySelectorAll('.results-slide__inner');

    slides.forEach(function (slide) {
        let active = false;
        let isMobile = /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);

        slide.querySelector('.scroller').addEventListener(isMobile ? 'touchstart' : 'mousedown', function (e) {
            active = true;
            slide.querySelector('.scroller').classList.add('scrolling');
            if (isMobile) {
                let touch = e.touches[0] || e.changedTouches[0];
                let x = touch.pageX;
                x -= slide.getBoundingClientRect().left;
                scrollIt(x, slide);
            }
        });

        document.body.addEventListener(isMobile ? 'touchend' : 'mouseup', function () {
            active = false;
            slide.querySelector('.scroller').classList.remove('scrolling');
        });

        document.body.addEventListener(isMobile ? 'touchcancel' : 'mouseleave', function () {
            active = false;
            slide.querySelector('.scroller').classList.remove('scrolling');
        });

        document.body.addEventListener(isMobile ? 'touchmove' : 'mousemove', function (e) {
            if (!active) return;
            let x = isMobile ? e.touches[0].pageX : e.pageX;
            x -= slide.getBoundingClientRect().left;
            scrollIt(x, slide);
        });

        function scrollIt(x, slide) {
            let transform = Math.max(0, Math.min(x, slide.offsetWidth));
            let percentage = (transform / slide.offsetWidth) * 100;
            slide.querySelector('.after').style.width = transform + "px";
            slide.querySelector('.scroller').style.left = "calc(" + percentage + "% - 19px)";
        }

        scrollIt(isMobile ? slide.offsetWidth * 0.5 : 275, slide);
    });
    
    //

    // Попап для subscription-details
    const subscriptionDetails = document.querySelector('.subscription-details');

    function addActiveClass() {
        subscriptionDetails.classList.add('subscription-details--active');
    }

    function removeActiveClass() {
        subscriptionDetails.classList.remove('subscription-details--active');
    }

    function handleInteraction() {
        if (isMobileDevice()) {
            subscriptionDetails.addEventListener('click', toggleActiveClass);
        } else {
            subscriptionDetails.addEventListener('mouseenter', addActiveClass);
            subscriptionDetails.addEventListener('mouseleave', removeActiveClass);
        }
    }

    function toggleActiveClass() {
        subscriptionDetails.classList.toggle('subscription-details--active');
    }

    function isMobileDevice() {
        return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);
    }

    handleInteraction();
    //

    // Языки
    $('.lang').on('click', function (event) {
        $(this).toggleClass('lang--active');
    });
    //

    // Механика для табов when-form__item
    $('.when-form__item').on('click', function (event) {
        $('.schedule--active').removeClass('schedule--active');
        let clickedItemId = $(this).attr('data-id');
        $('.schedule').each(function() {
            if ($(this).attr('data-id') === clickedItemId) {
                $(this).addClass('schedule--active');
            }
        });
    });
    //

    // Предотвращаем скролл вверх
    $('.sizes__list-link').on('click', function (event) {
        event.preventDefault();
    });
    //

    $('.sizes__list-link').on('click', function (event) {
        for (let item of $('.sizes__list-link')) {
            $(item).removeClass('sizes__list-link--active')
        }
        $(this).addClass('sizes__list-link--active');
    });

    // Скрыть/показать элементы
    $('.view').on('click', function (event) {
        $(this).closest('section').toggleClass('section--active');
    });
    //

    // Скрыть/показать секцию
    $('.section-top__button').on('click', function (event) {
        $(this).closest('section').toggleClass('section--closed');
    });
    //

    $('.reviews__link').on('click', function (event) {
        $('.reviews').toggleClass('reviews--active');
    });

    // Код для выбора
    $('.product-payment-item__radio').on('click', function (event) {
        $('.product-payment-item--active').removeClass('product-payment-item--active')
        for (let item of $('.product-payment-item__radio')) {
            item.checked = false
        }
        $(this)[0].checked = true
        $(this).closest('.product-payment-item').addClass('product-payment-item--active')
    });
    // 

    // Код для выбора
    $('.when-form__item-radio').on('click', function (event) {
        $('.when-form__item--active').removeClass('when-form__item--active')
        for (let item of $('.when-form__item-radio')) {
            item.checked = false
        }
        $(this)[0].checked = true
        $(this).closest('.when-form__item').addClass('when-form__item--active')
    });
    //


    // Код табов для отзывов
    $('.reviews-tubs__button').on('click', function (event) {
        let buttonId = $(this).attr('data-id');
        $('.reviews-tubs__button--active').removeClass('reviews-tubs__button--active');
        $('.reviews__wrapper--active').removeClass('reviews__wrapper--active');
        $('.reviews__wrapper').each(function() {
            if ($(this).attr('data-id') === buttonId) {
                $(this).addClass('reviews__wrapper--active');
            }
        });
        $(this).addClass('reviews-tubs__button--active');
    });
    //
})

// Кастомный селект
var x, i, j, l, ll, selElmnt, a, b, c;
/* Look for any elements with the class "custom-select": */
x = document.getElementsByClassName("custom-select");
l = x.length;
for (i = 0; i < l; i++) {
    selElmnt = x[i].getElementsByTagName("select")[0];
    ll = selElmnt.length;
    /* For each element, create a new DIV that will act as the selected item: */
    a = document.createElement("DIV");
    a.setAttribute("class", "select-selected");
    a.innerHTML = selElmnt.options[selElmnt.selectedIndex].innerHTML;
    x[i].appendChild(a);
    /* For each element, create a new DIV that will contain the option list: */
    b = document.createElement("DIV");
    b.setAttribute("class", "select-items select-hide");
    for (j = 1; j < ll; j++) {
        /* For each option in the original select element,
        create a new DIV that will act as an option item: */
        c = document.createElement("DIV");
        c.innerHTML = selElmnt.options[j].innerHTML;
        c.addEventListener("click", function (e) {
            /* When an item is clicked, update the original select box,
            and the selected item: */
            var y, i, k, s, h, sl, yl;
            s = this.parentNode.parentNode.getElementsByTagName("select")[0];
            sl = s.length;
            h = this.parentNode.previousSibling;
            for (i = 0; i < sl; i++) {
                if (s.options[i].innerHTML == this.innerHTML) {
                    s.selectedIndex = i;
                    h.innerHTML = this.innerHTML;
                    y = this.parentNode.getElementsByClassName("same-as-selected");
                    yl = y.length;
                    for (k = 0; k < yl; k++) {
                        y[k].removeAttribute("class");
                    }
                    this.setAttribute("class", "same-as-selected");
                    break;
                }
            }
            h.click();
        });
        b.appendChild(c);
    }
    x[i].appendChild(b);
    a.addEventListener("click", function (e) {
        /* When the select box is clicked, close any other select boxes,
        and open/close the current select box: */
        e.stopPropagation();
        closeAllSelect(this);
        this.nextSibling.classList.toggle("select-hide");
        this.classList.toggle("select-arrow-active");
    });
}

function closeAllSelect(elmnt) {
    /* A function that will close all select boxes in the document,
    except the current select box: */
    var x, y, i, xl, yl, arrNo = [];
    x = document.getElementsByClassName("select-items");
    y = document.getElementsByClassName("select-selected");
    xl = x.length;
    yl = y.length;
    for (i = 0; i < yl; i++) {
        if (elmnt == y[i]) {
            arrNo.push(i)
        } else {
            y[i].classList.remove("select-arrow-active");
        }
    }
    for (i = 0; i < xl; i++) {
        if (arrNo.indexOf(i)) {
            x[i].classList.add("select-hide");
        }
    }
}
// 

/* If the user clicks anywhere outside the select box,
then close all select boxes: */
document.addEventListener("click", closeAllSelect);

// Делаем высоту слайдов одинаковой
function setMaxHeightForIngredients() {
    setTimeout(() => {
        let heights = [];

        // Получаем высоту каждого элемента и добавляем в массив
        document.querySelectorAll('.ingredients-slide').forEach(function (slide) {
            heights.push(slide.getBoundingClientRect().height);
        });

        let maxHeight = Math.max(...heights);

        // Устанавливаем высоту каждого элемента в самую большую высоту
        document.querySelectorAll('.ingredients-slide').forEach(function (slide) {
            slide.style.minHeight = maxHeight + 'px';
        });
    }, 200)
}

$(function () {
    // Получаем нужный элемент
    if (document.querySelector('.ingredients-swiper')) {
        var element = document.querySelector('.ingredients-swiper');

        var newsVisible = function (target) {
            // let headerBottom = document.querySelectorAll('.header-bottom')[0]
            // var menuBtn = document.querySelectorAll('.menu-btn')[0]
            // var footerTop = document.querySelectorAll('.footer-top')[0]
            // Все позиции элемента
            var targetPosition = {
                    top: window.pageYOffset + target.getBoundingClientRect().top,
                    left: window.pageXOffset + target.getBoundingClientRect().left,
                    right: window.pageXOffset + target.getBoundingClientRect().right,
                    bottom: window.pageYOffset + target.getBoundingClientRect().bottom
                },
                // Получаем позиции окна
                windowPosition = {
                    top: window.pageYOffset,
                    left: window.pageXOffset,
                    right: window.pageXOffset + document.documentElement.clientWidth,
                    bottom: window.pageYOffset + document.documentElement.clientHeight
                };

            if (targetPosition.bottom > windowPosition.top && // Если позиция нижней части элемента больше позиции верхней чайти окна, то элемент виден сверху
                targetPosition.top < windowPosition.bottom && // Если позиция верхней части элемента меньше позиции нижней чайти окна, то элемент виден снизу
                targetPosition.right > windowPosition.left && // Если позиция правой стороны элемента больше позиции левой части окна, то элемент виден слева
                targetPosition.left < windowPosition.right) { // Если позиция левой стороны элемента меньше позиции правой чайти окна, то элемент виден справа
                // Если элемент полностью видно, то запускаем следующий код
                setMaxHeightForIngredients()
            } else {};
        };

        // Запускаем функцию при прокрутке страницы
        window.addEventListener('scroll', function () {
            newsVisible(element);
        });

        // А также запустим функцию сразу. А то вдруг, элемент изначально видно
        newsVisible(element);
    }
})
//

// Делаем высоту слайдов одинаковой
function setMaxHeightForSteps() {
    setTimeout(() => {
        let heights = [];

        // Получаем высоту каждого элемента и добавляем в массив
        document.querySelectorAll('.steps-slide').forEach(function (slide) {
            heights.push(slide.getBoundingClientRect().height);
        });

        let maxHeight = Math.max(...heights);

        // Устанавливаем высоту каждого элемента в самую большую высоту
        document.querySelectorAll('.steps-slide').forEach(function (slide) {
            slide.style.minHeight = maxHeight + 'px';
        });
    }, 200)
}

$(function () {
    // Получаем нужный элемент
    if (document.querySelector('.steps-swiper')) {
        var element = document.querySelector('.steps-swiper');

        var newsVisible = function (target) {
            // let headerBottom = document.querySelectorAll('.header-bottom')[0]
            // var menuBtn = document.querySelectorAll('.menu-btn')[0]
            // var footerTop = document.querySelectorAll('.footer-top')[0]
            // Все позиции элемента
            var targetPosition = {
                    top: window.pageYOffset + target.getBoundingClientRect().top,
                    left: window.pageXOffset + target.getBoundingClientRect().left,
                    right: window.pageXOffset + target.getBoundingClientRect().right,
                    bottom: window.pageYOffset + target.getBoundingClientRect().bottom
                },
                // Получаем позиции окна
                windowPosition = {
                    top: window.pageYOffset,
                    left: window.pageXOffset,
                    right: window.pageXOffset + document.documentElement.clientWidth,
                    bottom: window.pageYOffset + document.documentElement.clientHeight
                };

            if (targetPosition.bottom > windowPosition.top && // Если позиция нижней части элемента больше позиции верхней чайти окна, то элемент виден сверху
                targetPosition.top < windowPosition.bottom && // Если позиция верхней части элемента меньше позиции нижней чайти окна, то элемент виден снизу
                targetPosition.right > windowPosition.left && // Если позиция правой стороны элемента больше позиции левой части окна, то элемент виден слева
                targetPosition.left < windowPosition.right) { // Если позиция левой стороны элемента меньше позиции правой чайти окна, то элемент виден справа
                // Если элемент полностью видно, то запускаем следующий код
                setMaxHeightForSteps()
            } else {};
        };

        // Запускаем функцию при прокрутке страницы
        window.addEventListener('scroll', function () {
            newsVisible(element);
        });

        // А также запустим функцию сразу. А то вдруг, элемент изначально видно
        newsVisible(element);
    }
})
//

new Swiper('.product-swiper', {
    slidesPerView: 1,
    loop: true,
    speed: 750,
    spaceBetween: 10,
    navigation: {
        prevEl: '.product-swiper__arrow--prev',
        nextEl: '.product-swiper__arrow--next',
    },
    pagination: {
        el: '.product-swiper__pagination',
        type: 'bullets',
        clickable: true,
    },
    // autoplay: {
    //     delay: 5000, // задержка между слайдами в миллисекундах
    //     disableOnInteraction: false, // если true, автопрокрутка остановится при взаимодействии пользователя с swiper
    // },
    // breakpoints: {
    //     301: {
    //         slidesPerView: 2.2,
    //         centeredSlides: true,
    //         initialSlide: 1,
    //         slidesPerGroup: 1,
    //         loopedSlides: 6,
    //     },
    //     501: {
    //         slidesPerView: 2.5,
    //         centeredSlides: true,
    //         initialSlide: 1,
    //         slidesPerGroup: 1,
    //         loopedSlides: 6,
    //     },
    // }
});

new Swiper('.results-swiper', {
    slidesPerView: 1,
    loop: true,
    speed: 750,
    spaceBetween: 10,
    allowTouchMove: false,
    navigation: {
        prevEl: '.results-swiper__arrow--prev',
        nextEl: '.results-swiper__arrow--next',
    },
    pagination: {
        el: '.results-swiper__pagination',
        type: 'bullets',
        clickable: true,
    },
    // autoplay: {
    //     delay: 5000, // задержка между слайдами в миллисекундах
    //     disableOnInteraction: false, // если true, автопрокрутка остановится при взаимодействии пользователя с swiper
    // },
    // breakpoints: {
    //     301: {
    //         slidesPerView: 2.2,
    //         centeredSlides: true,
    //         initialSlide: 1,
    //         slidesPerGroup: 1,
    //         loopedSlides: 6,
    //     },
    //     501: {
    //         slidesPerView: 2.5,
    //         centeredSlides: true,
    //         initialSlide: 1,
    //         slidesPerGroup: 1,
    //         loopedSlides: 6,
    //     },
    // }
});

new Swiper('.ingredients-swiper', {
    slidesPerView: 1,
    loop: true,
    speed: 750,
    enabled: false,
    // autoplay: {
    //     delay: 5000, // задержка между слайдами в миллисекундах
    //     disableOnInteraction: false, // если true, автопрокрутка остановится при взаимодействии пользователя с swiper
    // },
    breakpoints: {
        301: {
            slidesPerView: 1.1,
            loop: true,
            spaceBetween: 11,
            speed: 750,
            enabled: true,
        },
        551: {
            slidesPerView: 1,
            loop: true,
            speed: 750,
            enabled: false,
        },
    }
});

new Swiper('.steps-swiper', {
    slidesPerView: 5,
    loop: true,
    speed: 750,
    spaceBetween: 15,
    // autoplay: {
    //     delay: 5000, // задержка между слайдами в миллисекундах
    //     disableOnInteraction: false, // если true, автопрокрутка остановится при взаимодействии пользователя с swiper
    // },
    breakpoints: {
        301: {
            slidesPerView: 1.7,
            loop: true,
            speed: 750,
            spaceBetween: 10,
        },
        401: {
            slidesPerView: 1.9,
            loop: true,
            speed: 750,
            spaceBetween: 15,
        },
        551: {
            slidesPerView: 2.5,
            loop: true,
            speed: 750,
            spaceBetween: 15,
        },
        701: {
            slidesPerView: 3.5,
            loop: true,
            speed: 750,
            spaceBetween: 15,
        },
        901: {
            slidesPerView: 4.5,
            loop: true,
            speed: 750,
            spaceBetween: 15,
        },
        1051: {
            slidesPerView: 5,
            loop: true,
            speed: 750,
            spaceBetween: 15,
        },
    }
});