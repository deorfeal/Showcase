// Aos - the right initialisation
jQuery(document).ready(function () {
    (function () {
        // your page initialization code here
        // the DOM will be available here
        AOS.init({
            duration: 750,
            offset: 0, // offset (in px) from the original trigger point
            anchorPlacement: 'top-bottom', // define where the AOS animations will be triggered
        });
    })();
});
// 

var input = document.querySelector("#phone");
var iti = window.intlTelInput(input, {
    utilsScript: "https://cdnjs.cloudflare.com/ajax/libs/intl-tel-input/17.0.13/js/utils.js",
    initialCountry: "auto",
    geoIpLookup: function (callback) {
        // Здесь можно использовать сервис геолокации, чтобы определить страну пользователя автоматически.
        // callback("US"); // Пример: установить США по умолчанию
    },
    separateDialCode: true, // Отдельный код страны
    nationalMode: false // Режим национального номера (не отображать код страны)
});

// Установка Германии по умолчанию
iti.setCountry("DE");

// Обработчик изменения выбранной страны
iti.promise.then(function () {
    input.addEventListener("countrychange", function () {
        var selectedCountryData = iti.getSelectedCountryData();
        var countryCode = selectedCountryData.dialCode;
        console.log("Выбран код страны: " + countryCode);
    });
});

// Получение элемента ввода телефонного номера
var input = document.querySelector("#phone");

// Добавление обработчика события input для валидации
input.addEventListener("input", function () {
    // Получение значения поля ввода
    var inputValue = input.value;

    // Очистка от нецифровых символов
    var numericValue = inputValue.replace(/\D/g, "");

    // Установка очищенного значения обратно в поле ввода
    input.value = numericValue;
});

$(function () {

    $('.btn').on('click', function (event) {
        $(this).closest('.window').addClass('window--active')
        if ($(this)[0].id == 0) {
            $('.greating').addClass('disabled')
            for (let item of $('.window')) {
                if (item.id == 0) {
                    $(item).removeClass('disabled');
                }
            }
        } else if ($(this)[0].id == 5) {
            setTimeout(() => {
                $('.window').addClass('disabled')
                $('.contact').removeClass('disabled')
            }, 1000)
        } else {
            for (let item = 0; item < 5; item++) {
                setTimeout(() => {
                    $('.window').addClass('disabled')
                }, 1000)
                for (let itm of $('.window')) {
                    if (itm.id == $(this)[0].id) {
                        setTimeout(() => {
                            $(itm).removeClass('disabled')
                        }, 1000)
                    }
                }
            }
        }
    });

    $('.window-form__radio-input').on('click', function (event) {
        for (let item = 0; item < 5; item++) {
            setTimeout(() => {
                $('.window').addClass('disabled')
            }, 1000)
            for (let itm of $('.window')) {
                if (itm.id == $(this).closest('.window').find('.btn')[0].id) {
                    setTimeout(() => {
                        $(itm).removeClass('disabled')
                    }, 1000)
                }
            }
        }
        if ($(this).closest('.window').find('.btn')[0].id == 5) {
            setTimeout(() => {
                $('.window').addClass('disabled')
            }, 1000)
            setTimeout(() => {
                $('.contact').removeClass('disabled')
            }, 1000)
        }
    })

    $('.window-form__radio-input').on('click', function (event) {
        var elementsParent = $(this).closest(".window");
        var inputParent = $(this).closest(".window-form__radio");

        // Убираем класс 'window-form__radio--active' у всех элементов с классом 'window-form__radio'
        $('.window-form__radio').removeClass('window-form__radio--active');

        // Устанавливаем checked на false у всех элементов с классом 'window-form__radio'
        $('.window-form__radio-input').prop('checked', false);

        // Устанавливаем checked на true только для текущего элемента
        $(this).prop('checked', true);

        // Добавляем класс 'window-form__radio--active' только текущему элементу
        inputParent.addClass('window-form__radio--active');

        elementsParent.addClass('window--active')
    });

    // // // проверка что все инпуты заполнены а чекбоксы нажаты

    // Получение всех инпутов и чекбоксов
    var inputs = document.querySelectorAll(".contact-form__box-input");
    var checkboxes = document.querySelectorAll(".contact-form__checkboxes-checkbox");

    // Получение элемента с классом contact
    var contactElement = document.querySelector(".contact");

    // Функция для проверки всех условий
    function checkConditions() {
        // Проверка заполненности всех инпутов
        var inputsFilled = Array.from(inputs).every(function (input) {
            return input.value.trim() !== ""; // Проверка, что значение не пустое после удаления пробелов
        });

        // Проверка, что оба чекбокса отмечены
        var checkboxesChecked = Array.from(checkboxes).every(function (checkbox) {
            return checkbox.checked;
        });

        // Если все условия выполняются, добавить класс contact--active, в противном случае убрать
        if (inputsFilled && checkboxesChecked) {
            contactElement.classList.add("contact--active");
        } else {
            contactElement.classList.remove("contact--active");
        }
    }

    // Добавление обработчиков событий для инпутов
    inputs.forEach(function (input) {
        input.addEventListener("input", checkConditions);
    });

    // Добавление обработчиков событий для чекбоксов
    checkboxes.forEach(function (checkbox) {
        checkbox.addEventListener("change", checkConditions);
    });

    // // // 
})